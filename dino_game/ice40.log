
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)

-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv source/dinoGame.sv source/pll.v source/parallelDisplay.sv source/GameState.sv source/dinoJump.sv source/cactusmove.sv source/random_generator.sv source/score_counter.sv source/clkdiv.v source/sevenSegment.sv source/collision_detector.sv ; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/dinoGame.sv
Parsing SystemVerilog input from `source/dinoGame.sv' to AST representation.
Generating RTLIL representation for module `\dinoGame'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: source/pll.v
Parsing SystemVerilog input from `source/pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: source/parallelDisplay.sv
Parsing SystemVerilog input from `source/parallelDisplay.sv' to AST representation.
Generating RTLIL representation for module `\parallelDisplay'.
Generating RTLIL representation for module `\draw_block'.
Generating RTLIL representation for module `\tft_init'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: source/GameState.sv
Parsing SystemVerilog input from `source/GameState.sv' to AST representation.
Generating RTLIL representation for module `\GameState'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: source/dinoJump.sv
Parsing SystemVerilog input from `source/dinoJump.sv' to AST representation.
Generating RTLIL representation for module `\dinoJump'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: source/cactusmove.sv
Parsing SystemVerilog input from `source/cactusmove.sv' to AST representation.
Generating RTLIL representation for module `\cactusMove'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: source/random_generator.sv
Parsing SystemVerilog input from `source/random_generator.sv' to AST representation.
Generating RTLIL representation for module `\random_generator'.
Generating RTLIL representation for module `\clock_div0'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: source/score_counter.sv
Parsing SystemVerilog input from `source/score_counter.sv' to AST representation.
Generating RTLIL representation for module `\score_counter'.
source/score_counter.sv:59: Warning: Identifier `\bcs_tens' is implicitly declared.
Generating RTLIL representation for module `\clock_divider'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: source/clkdiv.v
Parsing SystemVerilog input from `source/clkdiv.v' to AST representation.
Generating RTLIL representation for module `\clkdiv'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: source/sevenSegment.sv
Parsing SystemVerilog input from `source/sevenSegment.sv' to AST representation.
Generating RTLIL representation for module `\sevenSegment'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: source/collision_detector.sv
Parsing SystemVerilog input from `source/collision_detector.sv' to AST representation.
Generating RTLIL representation for module `\collision_detector'.
Successfully finished Verilog frontend.

14. Executing SYNTH_ICE40 pass.

14.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

14.2. Executing HIERARCHY pass (managing design hierarchy).

14.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \dinoGame
Used module:             \score_counter
Used module:                 \clock_divider
Used module:             \random_generator
Used module:                 \clock_div0
Used module:             \collision_detector
Used module:             \cactusMove
Used module:             \dinoJump
Used module:             \GameState
Used module:             \parallelDisplay
Used module:                 \draw_block
Used module:                 \tft_init
Used module:     \reset_on_start
Used module:     \pll

14.2.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \dinoGame
Used module:             \score_counter
Used module:                 \clock_divider
Used module:             \random_generator
Used module:                 \clock_div0
Used module:             \collision_detector
Used module:             \cactusMove
Used module:             \dinoJump
Used module:             \GameState
Used module:             \parallelDisplay
Used module:                 \draw_block
Used module:                 \tft_init
Used module:     \reset_on_start
Used module:     \pll
Removing unused module `\sevenSegment'.
Removing unused module `\clkdiv'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port dinoGame.collision.dinoY from 8 bits to 9 bits.
Warning: Resizing cell port dinoGame.controller.cactusH2 from 9 bits to 8 bits.
Warning: Resizing cell port dinoGame.controller.cactusH1 from 9 bits to 8 bits.

14.3. Executing PROC pass (convert processes to netlists).

14.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$472 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$461 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$458 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$455 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$452 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$449 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$434 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$423 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$420 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$417 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$414 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$411 in module SB_DFFSR.
Marked 7 switch rules as full_case in process $proc$source/collision_detector.sv:0$213 in module collision_detector.
Marked 2 switch rules as full_case in process $proc$source/score_counter.sv:165$200 in module clock_divider.
Marked 14 switch rules as full_case in process $proc$source/score_counter.sv:0$175 in module score_counter.
Marked 1 switch rules as full_case in process $proc$source/score_counter.sv:23$173 in module score_counter.
Marked 3 switch rules as full_case in process $proc$source/random_generator.sv:113$168 in module clock_div0.
Marked 3 switch rules as full_case in process $proc$source/random_generator.sv:0$164 in module random_generator.
Marked 1 switch rules as full_case in process $proc$source/random_generator.sv:38$162 in module random_generator.
Marked 1 switch rules as full_case in process $proc$source/random_generator.sv:29$160 in module random_generator.
Marked 1 switch rules as full_case in process $proc$source/cactusmove.sv:194$158 in module cactusMove.
Removed 3 dead cases from process $proc$source/cactusmove.sv:0$151 in module cactusMove.
Marked 7 switch rules as full_case in process $proc$source/cactusmove.sv:0$151 in module cactusMove.
Marked 2 switch rules as full_case in process $proc$source/cactusmove.sv:0$149 in module cactusMove.
Marked 1 switch rules as full_case in process $proc$source/cactusmove.sv:90$147 in module cactusMove.
Marked 3 switch rules as full_case in process $proc$source/cactusmove.sv:0$143 in module cactusMove.
Marked 1 switch rules as full_case in process $proc$source/cactusmove.sv:48$141 in module cactusMove.
Marked 2 switch rules as full_case in process $proc$source/cactusmove.sv:0$139 in module cactusMove.
Marked 1 switch rules as full_case in process $proc$source/cactusmove.sv:23$137 in module cactusMove.
Marked 6 switch rules as full_case in process $proc$source/dinoJump.sv:0$125 in module dinoJump.
Marked 5 switch rules as full_case in process $proc$source/dinoJump.sv:0$120 in module dinoJump.
Marked 2 switch rules as full_case in process $proc$source/dinoJump.sv:0$118 in module dinoJump.
Marked 1 switch rules as full_case in process $proc$source/dinoJump.sv:64$116 in module dinoJump.
Marked 2 switch rules as full_case in process $proc$source/dinoJump.sv:0$113 in module dinoJump.
Marked 1 switch rules as full_case in process $proc$source/dinoJump.sv:35$111 in module dinoJump.
Marked 1 switch rules as full_case in process $proc$source/dinoJump.sv:23$109 in module dinoJump.
Marked 6 switch rules as full_case in process $proc$source/GameState.sv:0$106 in module GameState.
Marked 1 switch rules as full_case in process $proc$source/GameState.sv:22$104 in module GameState.
Marked 1 switch rules as full_case in process $proc$source/parallelDisplay.sv:0$103 in module tft_init.
Marked 4 switch rules as full_case in process $proc$source/parallelDisplay.sv:517$93 in module tft_init.
Marked 1 switch rules as full_case in process $proc$source/parallelDisplay.sv:0$92 in module draw_block.
Marked 3 switch rules as full_case in process $proc$source/parallelDisplay.sv:366$77 in module draw_block.
Marked 11 switch rules as full_case in process $proc$source/parallelDisplay.sv:133$30 in module parallelDisplay.
Marked 1 switch rules as full_case in process $proc$source/dinoGame.sv:49$18 in module dinoGame.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:138$10 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:21$1 in module ice40hx8k.
Removed a total of 3 dead cases.

14.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 38 redundant assignments.
Promoted 83 assignments to connections.

14.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$482'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$478'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$471'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$467'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$460'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$457'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$454'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$451'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$446'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$440'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$429'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$422'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$408'.
  Set init value: \Q = 1'0
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:136$17'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:20$8'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:19$7'.
  Set init value: \ctr = 16'0000000000000000

14.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$458'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$452'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$420'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$414'.
Found async reset \nRst_i in `\clock_divider.$proc$source/score_counter.sv:165$200'.
Found async reset \reset in `\score_counter.$proc$source/score_counter.sv:23$173'.
Found async reset \reset in `\clock_div0.$proc$source/random_generator.sv:113$168'.
Found async reset \rst_n in `\random_generator.$proc$source/random_generator.sv:38$162'.
Found async reset \rst_n in `\random_generator.$proc$source/random_generator.sv:29$160'.
Found async reset \nRst in `\cactusMove.$proc$source/cactusmove.sv:194$158'.
Found async reset \nRst in `\cactusMove.$proc$source/cactusmove.sv:90$147'.
Found async reset \nRst in `\cactusMove.$proc$source/cactusmove.sv:48$141'.
Found async reset \nRst in `\cactusMove.$proc$source/cactusmove.sv:23$137'.
Found async reset \nRst in `\dinoJump.$proc$source/dinoJump.sv:64$116'.
Found async reset \nRst in `\dinoJump.$proc$source/dinoJump.sv:35$111'.
Found async reset \nRst in `\dinoJump.$proc$source/dinoJump.sv:23$109'.
Found async reset \reset in `\GameState.$proc$source/GameState.sv:22$104'.
Found async reset \rst in `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
Found async reset \rst in `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
Found async reset \rst in `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
Found async reset \rst in `\dinoGame.$proc$source/dinoGame.sv:49$18'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:138$10'.

14.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~117 debug messages>

14.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$482'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$478'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$472'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$471'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$467'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$461'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$460'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$458'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$457'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$455'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$454'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$452'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$451'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$449'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$447'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$446'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$445'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$440'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$434'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$429'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$423'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$422'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$420'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$417'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$414'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$411'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$409'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$408'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$407'.
Creating decoders for process `\collision_detector.$proc$source/collision_detector.sv:0$213'.
     1/9: $4\collision_detect2[0:0]
     2/9: $3\collision_detect2[0:0]
     3/9: $2\collision_detect2[0:0]
     4/9: $4\collision_detect1[0:0]
     5/9: $3\collision_detect1[0:0]
     6/9: $2\collision_detect1[0:0]
     7/9: $1\collision_detect[0:0]
     8/9: $1\collision_detect2[0:0]
     9/9: $1\collision_detect1[0:0]
Creating decoders for process `\clock_divider.$proc$source/score_counter.sv:165$200'.
     1/2: $0\slow_clk[0:0]
     2/2: $0\counter[25:0]
Creating decoders for process `\score_counter.$proc$source/score_counter.sv:0$175'.
     1/38: $11\n_bcd_tens[3:0]
     2/38: $11\n_bcd_ones[3:0]
     3/38: $11\deconcatenate[6:0]
     4/38: $10\n_bcd_tens[3:0]
     5/38: $10\n_bcd_ones[3:0]
     6/38: $10\deconcatenate[6:0]
     7/38: $9\n_bcd_tens[3:0]
     8/38: $9\n_bcd_ones[3:0]
     9/38: $9\deconcatenate[6:0]
    10/38: $8\n_bcd_tens[3:0]
    11/38: $8\n_bcd_ones[3:0]
    12/38: $8\deconcatenate[6:0]
    13/38: $7\n_bcd_tens[3:0]
    14/38: $7\n_bcd_ones[3:0]
    15/38: $7\deconcatenate[6:0]
    16/38: $6\n_bcd_tens[3:0]
    17/38: $6\n_bcd_ones[3:0]
    18/38: $6\deconcatenate[6:0]
    19/38: $5\n_bcd_tens[3:0]
    20/38: $5\n_bcd_ones[3:0]
    21/38: $5\deconcatenate[6:0]
    22/38: $4\n_bcd_tens[3:0]
    23/38: $4\n_bcd_ones[3:0]
    24/38: $4\deconcatenate[6:0]
    25/38: $3\n_bcd_tens[3:0]
    26/38: $3\n_bcd_ones[3:0]
    27/38: $3\deconcatenate[6:0]
    28/38: $5\n_score[6:0]
    29/38: $4\n_score[6:0]
    30/38: $2\n_bcd_tens[3:0]
    31/38: $2\n_bcd_ones[3:0]
    32/38: $2\deconcatenate[6:0]
    33/38: $3\n_score[6:0]
    34/38: $2\n_score[6:0]
    35/38: $1\deconcatenate[6:0]
    36/38: $1\n_bcd_tens[3:0]
    37/38: $1\n_bcd_ones[3:0]
    38/38: $1\n_score[6:0]
Creating decoders for process `\score_counter.$proc$source/score_counter.sv:23$173'.
     1/4: $0\bcd_tens[3:0]
     2/4: $0\bcd_ones[3:0]
     3/4: $0\score[6:0]
     4/4: $0\col[0:0]
Creating decoders for process `\clock_div0.$proc$source/random_generator.sv:113$168'.
     1/4: $3\clk1[0:0]
     2/4: $0\counter[13:0]
     3/4: $2\clk1[0:0]
     4/4: $1\clk1[0:0]
Creating decoders for process `\random_generator.$proc$source/random_generator.sv:0$164'.
     1/4: $2\n_lfsr2[1:0]
     2/4: $2\n_lfsr1[1:0]
     3/4: $1\n_lfsr2[1:0]
     4/4: $1\n_lfsr1[1:0]
Creating decoders for process `\random_generator.$proc$source/random_generator.sv:38$162'.
     1/1: $0\lfsr2[1:0]
Creating decoders for process `\random_generator.$proc$source/random_generator.sv:29$160'.
     1/1: $0\lfsr1[1:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:194$158'.
     1/3: $0\height2[8:0]
     2/3: $0\height1[8:0]
     3/3: $0\x_dist[8:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:0$151'.
     1/9: $3\n_h2[8:0]
     2/9: $2\n_h2[8:0]
     3/9: $3\n_h1[8:0]
     4/9: $2\n_h1[8:0]
     5/9: $3\x_distance[8:0]
     6/9: $2\x_distance[8:0]
     7/9: $1\n_h2[8:0]
     8/9: $1\n_h1[8:0]
     9/9: $1\x_distance[8:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:0$149'.
     1/2: $2\n_pixel[8:0]
     2/2: $1\n_pixel[8:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:90$147'.
     1/1: $0\pixel[8:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:0$143'.
     1/4: $2\atmax[0:0]
     2/4: $2\n_count[31:0]
     3/4: $1\n_count[31:0]
     4/4: $1\atmax[0:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:48$141'.
     1/1: $0\count[31:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:0$139'.
     1/2: $2\n_cactusMovement[0:0]
     2/2: $1\n_cactusMovement[0:0]
Creating decoders for process `\cactusMove.$proc$source/cactusmove.sv:23$137'.
     1/1: $0\cactusMovement[0:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:16$136'.
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:15$135'.
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:0$125'.
     1/13: $4\next_v[7:0]
     2/13: $3\next_v[7:0]
     3/13: $3\next_dinoY[7:0]
     4/13: $2\next_dinoY[7:0]
     5/13: $2\next_v[7:0]
     6/13: $3\at_max[0:0]
     7/13: $3\next_count[20:0]
     8/13: $2\next_count[20:0]
     9/13: $2\at_max[0:0]
    10/13: $1\at_max[0:0]
    11/13: $1\next_dinoY[7:0]
    12/13: $1\next_v[7:0]
    13/13: $1\next_count[20:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:0$120'.
     1/10: $5\next_dinoDelay[20:0]
     2/10: $5\maxdinoDelay[0:0]
     3/10: $4\maxdinoDelay[0:0]
     4/10: $4\next_dinoDelay[20:0]
     5/10: $3\maxdinoDelay[0:0]
     6/10: $3\next_dinoDelay[20:0]
     7/10: $2\maxdinoDelay[0:0]
     8/10: $2\next_dinoDelay[20:0]
     9/10: $1\next_dinoDelay[20:0]
    10/10: $1\maxdinoDelay[0:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:0$118'.
     1/2: $2\n_dinoMovement[0:0]
     2/2: $1\n_dinoMovement[0:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:64$116'.
     1/1: $0\dinoMovement[0:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:0$113'.
     1/2: $1\en2[0:0]
     2/2: $1\en[0:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:35$111'.
     1/2: $0\dinoDelay[20:0]
     2/2: $0\count[20:0]
Creating decoders for process `\dinoJump.$proc$source/dinoJump.sv:23$109'.
     1/2: $0\dinoY[7:0]
     2/2: $0\v[7:0]
Creating decoders for process `\GameState.$proc$source/GameState.sv:0$106'.
     1/6: $6\next_state[2:0]
     2/6: $5\next_state[2:0]
     3/6: $4\next_state[2:0]
     4/6: $3\next_state[2:0]
     5/6: $2\next_state[2:0]
     6/6: $1\next_state[2:0]
Creating decoders for process `\GameState.$proc$source/GameState.sv:22$104'.
     1/1: $0\state[2:0]
Creating decoders for process `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
     1/1: { $1\data[7:0] $1\rd[0:0] $1\cd[0:0] $1\cs[0:0] }
Creating decoders for process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
     1/5: $0\state[3:0]
     2/5: $0\idx[5:0]
     3/5: $0\init_done[0:0]
     4/5: $0\delay_counter[23:0]
     5/5: $0\wr[0:0]
Creating decoders for process `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
     1/4: $1\data[7:0]
     2/4: $1\rd[0:0]
     3/4: $1\cd[0:0]
     4/4: $1\cs[0:0]
Creating decoders for process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
     1/5: $0\counter[20:0]
     2/5: $0\idx[4:0]
     3/5: $0\state[3:0]
     4/5: $0\wr[0:0]
     5/5: $0\block_done[0:0]
Creating decoders for process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
     1/8: $0\received[1:0]
     2/8: $0\state[3:0]
     3/8: $0\color[15:0]
     4/8: $0\y_end[7:0]
     5/8: $0\y_start[7:0]
     6/8: $0\x_end[8:0]
     7/8: $0\x_start[8:0]
     8/8: $0\current_object[1:0]
Creating decoders for process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
Creating decoders for process `\dinoGame.$proc$source/dinoGame.sv:49$18'.
     1/3: $0\det[0:0]
     2/3: $0\sync1[0:0]
     3/3: $0\sync0[0:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:136$17'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:138$10'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:20$8'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:19$7'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:21$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

14.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\collision_detector.\collision_detect' from process `\collision_detector.$proc$source/collision_detector.sv:0$213'.
No latch inferred for signal `\collision_detector.\collision_detect1' from process `\collision_detector.$proc$source/collision_detector.sv:0$213'.
No latch inferred for signal `\collision_detector.\collision_detect2' from process `\collision_detector.$proc$source/collision_detector.sv:0$213'.
No latch inferred for signal `\score_counter.\det' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\score_counter.\next_state' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\score_counter.\n_score' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\score_counter.\deconcatenate' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\score_counter.\n_bcd_ones' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\score_counter.\n_bcd_tens' from process `\score_counter.$proc$source/score_counter.sv:0$175'.
No latch inferred for signal `\random_generator.\rnd' from process `\random_generator.$proc$source/random_generator.sv:0$164'.
No latch inferred for signal `\random_generator.\n_lfsr1' from process `\random_generator.$proc$source/random_generator.sv:0$164'.
No latch inferred for signal `\random_generator.\feedback1' from process `\random_generator.$proc$source/random_generator.sv:0$164'.
No latch inferred for signal `\random_generator.\n_lfsr2' from process `\random_generator.$proc$source/random_generator.sv:0$164'.
No latch inferred for signal `\random_generator.\feedback2' from process `\random_generator.$proc$source/random_generator.sv:0$164'.
No latch inferred for signal `\cactusMove.\x_distance' from process `\cactusMove.$proc$source/cactusmove.sv:0$151'.
No latch inferred for signal `\cactusMove.\n_h1' from process `\cactusMove.$proc$source/cactusmove.sv:0$151'.
No latch inferred for signal `\cactusMove.\n_h2' from process `\cactusMove.$proc$source/cactusmove.sv:0$151'.
No latch inferred for signal `\cactusMove.\n_pixel' from process `\cactusMove.$proc$source/cactusmove.sv:0$149'.
No latch inferred for signal `\cactusMove.\n_count' from process `\cactusMove.$proc$source/cactusmove.sv:0$143'.
No latch inferred for signal `\cactusMove.\atmax' from process `\cactusMove.$proc$source/cactusmove.sv:0$143'.
No latch inferred for signal `\cactusMove.\n_cactusMovement' from process `\cactusMove.$proc$source/cactusmove.sv:0$139'.
No latch inferred for signal `\dinoJump.\onFloor' from process `\dinoJump.$proc$source/dinoJump.sv:16$136'.
No latch inferred for signal `\dinoJump.\floorY' from process `\dinoJump.$proc$source/dinoJump.sv:15$135'.
No latch inferred for signal `\dinoJump.\next_count' from process `\dinoJump.$proc$source/dinoJump.sv:0$125'.
No latch inferred for signal `\dinoJump.\next_v' from process `\dinoJump.$proc$source/dinoJump.sv:0$125'.
No latch inferred for signal `\dinoJump.\next_dinoY' from process `\dinoJump.$proc$source/dinoJump.sv:0$125'.
No latch inferred for signal `\dinoJump.\at_max' from process `\dinoJump.$proc$source/dinoJump.sv:0$125'.
No latch inferred for signal `\dinoJump.\next_dinoDelay' from process `\dinoJump.$proc$source/dinoJump.sv:0$120'.
No latch inferred for signal `\dinoJump.\maxdinoDelay' from process `\dinoJump.$proc$source/dinoJump.sv:0$120'.
No latch inferred for signal `\dinoJump.\n_dinoMovement' from process `\dinoJump.$proc$source/dinoJump.sv:0$118'.
No latch inferred for signal `\dinoJump.\en' from process `\dinoJump.$proc$source/dinoJump.sv:0$113'.
No latch inferred for signal `\dinoJump.\en2' from process `\dinoJump.$proc$source/dinoJump.sv:0$113'.
No latch inferred for signal `\GameState.\next_state' from process `\GameState.$proc$source/GameState.sv:0$106'.
No latch inferred for signal `\tft_init.\cs' from process `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
No latch inferred for signal `\tft_init.\cd' from process `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
No latch inferred for signal `\tft_init.\rd' from process `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
No latch inferred for signal `\tft_init.\data' from process `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
No latch inferred for signal `\draw_block.\cs' from process `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
No latch inferred for signal `\draw_block.\cd' from process `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
No latch inferred for signal `\draw_block.\rd' from process `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
No latch inferred for signal `\draw_block.\data' from process `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
No latch inferred for signal `\parallelDisplay.\cactusX2' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\d_x_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\d_x_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\d_y_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\d_y_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\d_color' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c1_x_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c1_x_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c1_y_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c1_y_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c1_color' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c2_x_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c2_x_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c2_y_start' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c2_y_end' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
No latch inferred for signal `\parallelDisplay.\c2_color' from process `\parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.

14.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479'.
  created $adff cell `$procdff$2124' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$472'.
  created $dff cell `$procdff$2125' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468'.
  created $adff cell `$procdff$2126' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$461'.
  created $dff cell `$procdff$2127' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$458'.
  created $adff cell `$procdff$2128' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$455'.
  created $dff cell `$procdff$2129' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$452'.
  created $adff cell `$procdff$2130' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$449'.
  created $dff cell `$procdff$2131' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$447'.
  created $dff cell `$procdff$2132' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$445'.
  created $dff cell `$procdff$2133' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441'.
  created $adff cell `$procdff$2134' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$434'.
  created $dff cell `$procdff$2135' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430'.
  created $adff cell `$procdff$2136' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$423'.
  created $dff cell `$procdff$2137' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$420'.
  created $adff cell `$procdff$2138' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$417'.
  created $dff cell `$procdff$2139' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$414'.
  created $adff cell `$procdff$2140' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$411'.
  created $dff cell `$procdff$2141' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$409'.
  created $dff cell `$procdff$2142' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$407'.
  created $dff cell `$procdff$2143' with positive edge clock.
Creating register for signal `\clock_divider.\counter' using process `\clock_divider.$proc$source/score_counter.sv:165$200'.
  created $adff cell `$procdff$2144' with positive edge clock and negative level reset.
Creating register for signal `\clock_divider.\slow_clk' using process `\clock_divider.$proc$source/score_counter.sv:165$200'.
  created $adff cell `$procdff$2145' with positive edge clock and negative level reset.
Creating register for signal `\score_counter.\score' using process `\score_counter.$proc$source/score_counter.sv:23$173'.
  created $adff cell `$procdff$2146' with positive edge clock and negative level reset.
Creating register for signal `\score_counter.\bcd_ones' using process `\score_counter.$proc$source/score_counter.sv:23$173'.
  created $adff cell `$procdff$2147' with positive edge clock and negative level reset.
Creating register for signal `\score_counter.\bcd_tens' using process `\score_counter.$proc$source/score_counter.sv:23$173'.
  created $adff cell `$procdff$2148' with positive edge clock and negative level reset.
Creating register for signal `\score_counter.\col' using process `\score_counter.$proc$source/score_counter.sv:23$173'.
  created $adff cell `$procdff$2149' with positive edge clock and negative level reset.
Creating register for signal `\clock_div0.\counter' using process `\clock_div0.$proc$source/random_generator.sv:113$168'.
  created $adff cell `$procdff$2150' with positive edge clock and negative level reset.
Creating register for signal `\clock_div0.\clk1' using process `\clock_div0.$proc$source/random_generator.sv:113$168'.
  created $adff cell `$procdff$2151' with positive edge clock and negative level reset.
Creating register for signal `\random_generator.\lfsr2' using process `\random_generator.$proc$source/random_generator.sv:38$162'.
  created $adff cell `$procdff$2152' with positive edge clock and negative level reset.
Creating register for signal `\random_generator.\lfsr1' using process `\random_generator.$proc$source/random_generator.sv:29$160'.
  created $adff cell `$procdff$2153' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\x_dist' using process `\cactusMove.$proc$source/cactusmove.sv:194$158'.
  created $adff cell `$procdff$2154' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\height1' using process `\cactusMove.$proc$source/cactusmove.sv:194$158'.
  created $adff cell `$procdff$2155' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\height2' using process `\cactusMove.$proc$source/cactusmove.sv:194$158'.
  created $adff cell `$procdff$2156' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\pixel' using process `\cactusMove.$proc$source/cactusmove.sv:90$147'.
  created $adff cell `$procdff$2157' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\count' using process `\cactusMove.$proc$source/cactusmove.sv:48$141'.
  created $adff cell `$procdff$2158' with positive edge clock and negative level reset.
Creating register for signal `\cactusMove.\cactusMovement' using process `\cactusMove.$proc$source/cactusmove.sv:23$137'.
  created $adff cell `$procdff$2159' with positive edge clock and negative level reset.
Creating register for signal `\dinoJump.\dinoMovement' using process `\dinoJump.$proc$source/dinoJump.sv:64$116'.
  created $adff cell `$procdff$2160' with positive edge clock and negative level reset.
Creating register for signal `\dinoJump.\count' using process `\dinoJump.$proc$source/dinoJump.sv:35$111'.
  created $adff cell `$procdff$2161' with positive edge clock and negative level reset.
Creating register for signal `\dinoJump.\dinoDelay' using process `\dinoJump.$proc$source/dinoJump.sv:35$111'.
  created $adff cell `$procdff$2162' with positive edge clock and negative level reset.
Creating register for signal `\dinoJump.\v' using process `\dinoJump.$proc$source/dinoJump.sv:23$109'.
  created $adff cell `$procdff$2163' with positive edge clock and negative level reset.
Creating register for signal `\dinoJump.\dinoY' using process `\dinoJump.$proc$source/dinoJump.sv:23$109'.
  created $adff cell `$procdff$2164' with positive edge clock and negative level reset.
Creating register for signal `\GameState.\state' using process `\GameState.$proc$source/GameState.sv:22$104'.
  created $adff cell `$procdff$2165' with positive edge clock and negative level reset.
Creating register for signal `\tft_init.\init_done' using process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
  created $adff cell `$procdff$2166' with positive edge clock and negative level reset.
Creating register for signal `\tft_init.\wr' using process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
  created $adff cell `$procdff$2167' with positive edge clock and negative level reset.
Creating register for signal `\tft_init.\state' using process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
  created $adff cell `$procdff$2168' with positive edge clock and negative level reset.
Creating register for signal `\tft_init.\idx' using process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
  created $adff cell `$procdff$2169' with positive edge clock and negative level reset.
Creating register for signal `\tft_init.\delay_counter' using process `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
  created $adff cell `$procdff$2170' with positive edge clock and negative level reset.
Creating register for signal `\draw_block.\block_done' using process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
  created $adff cell `$procdff$2171' with positive edge clock and negative level reset.
Creating register for signal `\draw_block.\wr' using process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
  created $adff cell `$procdff$2172' with positive edge clock and negative level reset.
Creating register for signal `\draw_block.\state' using process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
  created $adff cell `$procdff$2173' with positive edge clock and negative level reset.
Creating register for signal `\draw_block.\idx' using process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
  created $adff cell `$procdff$2174' with positive edge clock and negative level reset.
Creating register for signal `\draw_block.\counter' using process `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
  created $adff cell `$procdff$2175' with positive edge clock and negative level reset.
Creating register for signal `\parallelDisplay.\received' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $adff cell `$procdff$2176' with positive edge clock and negative level reset.
Creating register for signal `\parallelDisplay.\state' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $adff cell `$procdff$2177' with positive edge clock and negative level reset.
Creating register for signal `\parallelDisplay.\current_object' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $adff cell `$procdff$2178' with positive edge clock and negative level reset.
Creating register for signal `\parallelDisplay.\x_start' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $dff cell `$procdff$2181' with positive edge clock.
Creating register for signal `\parallelDisplay.\x_end' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $dff cell `$procdff$2184' with positive edge clock.
Creating register for signal `\parallelDisplay.\y_start' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $dff cell `$procdff$2187' with positive edge clock.
Creating register for signal `\parallelDisplay.\y_end' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $dff cell `$procdff$2190' with positive edge clock.
Creating register for signal `\parallelDisplay.\color' using process `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
  created $dff cell `$procdff$2193' with positive edge clock.
Creating register for signal `\dinoGame.\sync0' using process `\dinoGame.$proc$source/dinoGame.sv:49$18'.
  created $adff cell `$procdff$2194' with positive edge clock and negative level reset.
Creating register for signal `\dinoGame.\sync1' using process `\dinoGame.$proc$source/dinoGame.sv:49$18'.
  created $adff cell `$procdff$2195' with positive edge clock and negative level reset.
Creating register for signal `\dinoGame.\det' using process `\dinoGame.$proc$source/dinoGame.sv:49$18'.
  created $adff cell `$procdff$2196' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:138$10'.
  created $adff cell `$procdff$2197' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:21$1'.
  created $dff cell `$procdff$2198' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:21$1'.
  created $dff cell `$procdff$2199' with positive edge clock.

14.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

14.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$482'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$479'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$478'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$472'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$472'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$471'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$468'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$467'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$461'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$461'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$460'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$458'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$457'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$455'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$455'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$454'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$452'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$451'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$449'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$449'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$448'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$447'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$447'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$446'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$445'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$444'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$441'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$440'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$434'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$434'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$433'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$430'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$429'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$423'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$423'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$422'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$420'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$419'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$417'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$417'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$416'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$414'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$413'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$411'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$411'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$409'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$409'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$408'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$407'.
Found and cleaned up 7 empty switches in `\collision_detector.$proc$source/collision_detector.sv:0$213'.
Removing empty process `collision_detector.$proc$source/collision_detector.sv:0$213'.
Found and cleaned up 1 empty switch in `\clock_divider.$proc$source/score_counter.sv:165$200'.
Removing empty process `clock_divider.$proc$source/score_counter.sv:165$200'.
Found and cleaned up 14 empty switches in `\score_counter.$proc$source/score_counter.sv:0$175'.
Removing empty process `score_counter.$proc$source/score_counter.sv:0$175'.
Removing empty process `score_counter.$proc$source/score_counter.sv:23$173'.
Found and cleaned up 2 empty switches in `\clock_div0.$proc$source/random_generator.sv:113$168'.
Removing empty process `clock_div0.$proc$source/random_generator.sv:113$168'.
Found and cleaned up 3 empty switches in `\random_generator.$proc$source/random_generator.sv:0$164'.
Removing empty process `random_generator.$proc$source/random_generator.sv:0$164'.
Removing empty process `random_generator.$proc$source/random_generator.sv:38$162'.
Removing empty process `random_generator.$proc$source/random_generator.sv:29$160'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:194$158'.
Found and cleaned up 7 empty switches in `\cactusMove.$proc$source/cactusmove.sv:0$151'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:0$151'.
Found and cleaned up 2 empty switches in `\cactusMove.$proc$source/cactusmove.sv:0$149'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:0$149'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:90$147'.
Found and cleaned up 3 empty switches in `\cactusMove.$proc$source/cactusmove.sv:0$143'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:0$143'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:48$141'.
Found and cleaned up 2 empty switches in `\cactusMove.$proc$source/cactusmove.sv:0$139'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:0$139'.
Removing empty process `cactusMove.$proc$source/cactusmove.sv:23$137'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:16$136'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:15$135'.
Found and cleaned up 6 empty switches in `\dinoJump.$proc$source/dinoJump.sv:0$125'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:0$125'.
Found and cleaned up 5 empty switches in `\dinoJump.$proc$source/dinoJump.sv:0$120'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:0$120'.
Found and cleaned up 2 empty switches in `\dinoJump.$proc$source/dinoJump.sv:0$118'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:0$118'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:64$116'.
Found and cleaned up 2 empty switches in `\dinoJump.$proc$source/dinoJump.sv:0$113'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:0$113'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:35$111'.
Removing empty process `dinoJump.$proc$source/dinoJump.sv:23$109'.
Found and cleaned up 6 empty switches in `\GameState.$proc$source/GameState.sv:0$106'.
Removing empty process `GameState.$proc$source/GameState.sv:0$106'.
Removing empty process `GameState.$proc$source/GameState.sv:22$104'.
Found and cleaned up 1 empty switch in `\tft_init.$proc$source/parallelDisplay.sv:0$103'.
Removing empty process `tft_init.$proc$source/parallelDisplay.sv:0$103'.
Found and cleaned up 4 empty switches in `\tft_init.$proc$source/parallelDisplay.sv:517$93'.
Removing empty process `tft_init.$proc$source/parallelDisplay.sv:517$93'.
Found and cleaned up 1 empty switch in `\draw_block.$proc$source/parallelDisplay.sv:0$92'.
Removing empty process `draw_block.$proc$source/parallelDisplay.sv:0$92'.
Found and cleaned up 6 empty switches in `\draw_block.$proc$source/parallelDisplay.sv:366$77'.
Removing empty process `draw_block.$proc$source/parallelDisplay.sv:366$77'.
Found and cleaned up 20 empty switches in `\parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
Removing empty process `parallelDisplay.$proc$source/parallelDisplay.sv:133$30'.
Removing empty process `parallelDisplay.$proc$source/parallelDisplay.sv:0$23'.
Removing empty process `dinoGame.$proc$source/dinoGame.sv:49$18'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:136$17'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:138$10'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:138$10'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:20$8'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:19$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:21$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:21$1'.
Cleaned up 118 empty switches.

14.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module collision_detector.
Optimizing module clock_divider.
Optimizing module score_counter.
<suppressed ~1 debug messages>
Optimizing module clock_div0.
Optimizing module random_generator.
<suppressed ~2 debug messages>
Optimizing module cactusMove.
<suppressed ~3 debug messages>
Optimizing module dinoJump.
<suppressed ~9 debug messages>
Optimizing module GameState.
<suppressed ~2 debug messages>
Optimizing module tft_init.
<suppressed ~2 debug messages>
Optimizing module draw_block.
<suppressed ~1 debug messages>
Optimizing module parallelDisplay.
<suppressed ~8 debug messages>
Optimizing module pll.
Optimizing module dinoGame.
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

14.4. Executing FLATTEN pass (flatten design).
Deleting now unused module collision_detector.
Deleting now unused module clock_divider.
Deleting now unused module score_counter.
Deleting now unused module clock_div0.
Deleting now unused module random_generator.
Deleting now unused module cactusMove.
Deleting now unused module dinoJump.
Deleting now unused module GameState.
Deleting now unused module tft_init.
Deleting now unused module draw_block.
Deleting now unused module parallelDisplay.
Deleting now unused module pll.
Deleting now unused module dinoGame.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~18 debug messages>

14.5. Executing TRIBUF pass.

14.6. Executing DEMINOUT pass (demote inout ports to input or output).

14.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~10 debug messages>

14.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 268 unused cells and 928 unused wires.
<suppressed ~319 debug messages>

14.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Found and reported 32 problems.

14.10. Executing OPT pass (performing simple optimizations).

14.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~546 debug messages>
Removed a total of 182 cells.

14.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1420.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1428.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1444.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactus2size.$procmux$1301.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$675.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$677.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$679.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$688.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$690.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactus2size.$procmux$1309.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$708.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$710.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$712.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$721.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\collision.$procmux$723.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1301.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1309.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$procmux$1284.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$procmux$1284.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusDist.$procmux$1301.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusDist.$procmux$1309.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$procmux$1284.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$procmux$1284.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1456.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1459.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1461.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1470.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1472.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1481.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1483.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1491.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1499.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1332.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1508.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1510.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1334.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1519.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1521.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$procmux$1284.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1529.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1342.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1568.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1570.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1573.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1575.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1584.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1586.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1589.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1591.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1353.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1600.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1603.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1605.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1355.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1614.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1617.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1619.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1625.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1628.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1630.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1636.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1639.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1641.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1363.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1649.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1657.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\dinoJump.$procmux$1673.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1688.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1695.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1704.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1706.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1374.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1714.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1376.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\game.$procmux$1723.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1384.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1202.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1204.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1206.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1215.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1217.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1249.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1257.
    dead port 2/2 on $mux $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1407.
    dead port 1/2 on $mux $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$procmux$1284.
Removed 85 multiplexer ports.
<suppressed ~61 debug messages>

14.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1923: { $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2219 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1947: { $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1894_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2221 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1981: { $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1894_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2223 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2015: { $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2225 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactusDist.$procmux$1312: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2227 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1318: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2229 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactusDist.$procmux$1318: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2231 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2045: { $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2233 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1805: $auto$opt_reduce.cc:134:opt_pmux$2235
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1851: { $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1838_CMP $auto$opt_reduce.cc:134:opt_pmux$2237 $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1832_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1735: { $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1746_CMP $auto$opt_reduce.cc:134:opt_pmux$2239 $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1736_CMP }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactus2size.$procmux$1312: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2241 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactus2size.$procmux$1318: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2243 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1312: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2245 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\scoreCounter.$procmux$1276: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2247 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 15 changes.

14.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

14.10.6. Executing OPT_DFF pass (perform DFF optimizations).

14.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 281 unused wires.
<suppressed ~6 debug messages>

14.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.10.9. Rerunning OPT passes. (Maybe there is more to do..)

14.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

14.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1878: { $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1916_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $auto$opt_reduce.cc:134:opt_pmux$2249 }
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\game.$procmux$1726: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1316_CMP $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP $auto$opt_reduce.cc:134:opt_pmux$2251 }
  Optimizing cells in module \ice40hx8k.
Performed a total of 2 changes.

14.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

14.10.13. Executing OPT_DFF pass (perform DFF optimizations).

14.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

14.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.10.16. Rerunning OPT passes. (Maybe there is more to do..)

14.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

14.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.10.20. Executing OPT_DFF pass (perform DFF optimizations).

14.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.10.23. Finished OPT passes. (There is nothing left to do.)

14.11. Executing FSM pass (extract and optimize FSM).

14.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.top_inst.dinoGame.cactusMove.height1 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking ice40hx8k.top_inst.dinoGame.cactusMove.height2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking ice40hx8k.top_inst.dinoGame.cactusMove.x_dist as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking ice40hx8k.top_inst.dinoGame.controller.color as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ice40hx8k.top_inst.dinoGame.controller.drawBlock.state.
Not marking ice40hx8k.top_inst.dinoGame.controller.init_module.state as FSM state register:
    Circuit seems to be self-resetting.
Not marking ice40hx8k.top_inst.dinoGame.controller.received as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ice40hx8k.top_inst.dinoGame.controller.state.
Not marking ice40hx8k.top_inst.dinoGame.game.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.

14.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\top_inst.dinoGame.controller.drawBlock.state' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procdff$2173
  root of input selection tree: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0]
  found reset state: 4'0000 (from async reset)
  found ctrl input: \top_inst.dinoGame.controller.init_module.init_done
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$logic_or$source/parallelDisplay.sv:408$91_Y
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1832_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$2237
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1838_CMP
  found state code: 4'0001
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$eq$source/parallelDisplay.sv:392$88_Y
  found state code: 4'0010
  found state code: 4'0011
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1832_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1838_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1853_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1858_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$2237 \top_inst.dinoGame.controller.init_module.init_done $flatten\top_inst.\dinoGame.\controller.\drawBlock.$logic_or$source/parallelDisplay.sv:408$91_Y $flatten\top_inst.\dinoGame.\controller.\drawBlock.$eq$source/parallelDisplay.sv:392$88_Y }
  ctrl outputs: { $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1858_CMP $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1853_CMP $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1838_CMP $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1832_CMP $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0] }
  transition:     4'0000 4'-0-- ->     4'0000 8'10000000
  transition:     4'0000 4'-10- ->     4'0001 8'10000001
  transition:     4'0000 4'-11- ->     4'0011 8'10000011
  transition:     4'0010 4'-0-- ->     4'0010 8'01000010
  transition:     4'0010 4'-10- ->     4'0001 8'01000001
  transition:     4'0010 4'-11- ->     4'0011 8'01000011
  transition:     4'0001 4'-0-- ->     4'0001 8'00100001
  transition:     4'0001 4'-100 ->     4'0010 8'00100010
  transition:     4'0001 4'-101 ->     4'0011 8'00100011
  transition:     4'0001 4'-11- ->     4'0011 8'00100011
  transition:     4'0011 4'-0-- ->     4'0011 8'00010011
  transition:     4'0011 4'-10- ->     4'0000 8'00010000
  transition:     4'0011 4'-11- ->     4'0011 8'00010011
Extracting FSM `\top_inst.dinoGame.controller.state' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\dinoGame.\controller.$procdff$2177
  root of input selection tree: $flatten\top_inst.\dinoGame.\controller.$0\state[3:0]
  found reset state: 4'0000 (from async reset)
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$2219
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1916_CMP
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP
  found ctrl input: \top_inst.dinoGame.controller.drawBlock.block_done
  found state code: 4'0010
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:304$74_Y
  found state code: 4'1001
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:288$69_Y
  found state code: 4'0101
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:243$55_Y
  found state code: 4'1000
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:225$50_Y
  found state code: 4'0111
  found state code: 4'0110
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:179$32_Y
  found ctrl input: $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:182$33_Y
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0001
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1919_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1916_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1894_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP
  found ctrl output: $flatten\top_inst.\dinoGame.\controller.$procmux$1874_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$2219 $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:179$32_Y $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:182$33_Y $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:225$50_Y $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:243$55_Y $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:288$69_Y $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:304$74_Y \top_inst.dinoGame.controller.drawBlock.block_done }
  ctrl outputs: { $flatten\top_inst.\dinoGame.\controller.$0\state[3:0] $flatten\top_inst.\dinoGame.\controller.$procmux$1874_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1894_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1916_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1919_CMP $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP }
  transition:     4'0000 8'-------0 ->     4'0000 14'00000000000001
  transition:     4'0000 8'-------1 ->     4'0001 14'00010000000001
  transition:     4'1000 8'------00 ->     4'1000 14'10000010000000
  transition:     4'1000 8'------10 ->     4'1001 14'10010010000000
  transition:     4'1000 8'-------1 ->     4'1001 14'10010010000000
  transition:     4'0100 8'---0---0 ->     4'0100 14'01000000001000
  transition:     4'0100 8'---1---0 ->     4'0111 14'01110000001000
  transition:     4'0100 8'-------1 ->     4'0111 14'01110000001000
  transition:     4'0010 8'-00----- ->     4'0010 14'00100000000100
  transition:     4'0010 8'-01----- ->     4'0100 14'01000000000100
  transition:     4'0010 8'-1------ ->     4'0011 14'00110000000100
  transition:     4'0110 8'-------0 ->     4'0110 14'01100000100000
  transition:     4'0110 8'-------1 ->     4'0010 14'00100000100000
  transition:     4'0001 8'-------0 ->     4'0001 14'00010000000010
  transition:     4'0001 8'-------1 ->     4'0010 14'00100000000010
  transition:     4'1001 8'-------0 ->     4'1001 14'10011000000000
  transition:     4'1001 8'-------1 ->     4'0010 14'00101000000000
  transition:     4'0101 8'----0--0 ->     4'0101 14'01010000010000
  transition:     4'0101 8'----1--0 ->     4'1000 14'10000000010000
  transition:     4'0101 8'-------1 ->     4'1000 14'10000000010000
  transition:     4'0011 8'-------0 ->     4'0011 14'00110100000000
  transition:     4'0011 8'-------1 ->     4'0110 14'01100100000000
  transition:     4'0111 8'-----0-0 ->     4'0111 14'01110001000000
  transition:     4'0111 8'-----1-0 ->     4'0101 14'01010001000000
  transition:     4'0111 8'-------1 ->     4'0101 14'01010001000000

14.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.dinoGame.controller.state$2258' from module `\ice40hx8k'.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$2219.
Optimizing FSM `$fsm$\top_inst.dinoGame.controller.drawBlock.state$2252' from module `\ice40hx8k'.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$2237.

14.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 35 unused cells and 35 unused wires.
<suppressed ~36 debug messages>

14.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.dinoGame.controller.drawBlock.state$2252' from module `\ice40hx8k'.
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0] [0].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0] [1].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0] [2].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.\drawBlock.$0\state[3:0] [3].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1858_CMP.
Optimizing FSM `$fsm$\top_inst.dinoGame.controller.state$2258' from module `\ice40hx8k'.
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.$procmux$1916_CMP.
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.$0\state[3:0] [0].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.$0\state[3:0] [1].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.$0\state[3:0] [2].
  Removing unused output signal $flatten\top_inst.\dinoGame.\controller.$0\state[3:0] [3].

14.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\top_inst.dinoGame.controller.drawBlock.state$2252' from module `\ice40hx8k' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ---1
  0010 -> --1-
  0001 -> -1--
  0011 -> 1---
Recoding FSM `$fsm$\top_inst.dinoGame.controller.state$2258' from module `\ice40hx8k' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ---------1
  1000 -> --------1-
  0100 -> -------1--
  0010 -> ------1---
  0110 -> -----1----
  0001 -> ----1-----
  1001 -> ---1------
  0101 -> --1-------
  0011 -> -1--------
  0111 -> 1---------

14.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\top_inst.dinoGame.controller.drawBlock.state$2252' from module `ice40hx8k':
-------------------------------------

  Information on FSM $fsm$\top_inst.dinoGame.controller.drawBlock.state$2252 (\top_inst.dinoGame.controller.drawBlock.state):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       4

  Input signals:
    0: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$eq$source/parallelDisplay.sv:392$88_Y
    1: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$logic_or$source/parallelDisplay.sv:408$91_Y
    2: \top_inst.dinoGame.controller.init_module.init_done

  Output signals:
    0: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1832_CMP
    1: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1838_CMP
    2: $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1853_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'0--   ->     0 3'000
      1:     0 3'10-   ->     2 3'000
      2:     0 3'11-   ->     3 3'000
      3:     1 3'0--   ->     1 3'100
      4:     1 3'10-   ->     2 3'100
      5:     1 3'11-   ->     3 3'100
      6:     2 3'100   ->     1 3'010
      7:     2 3'0--   ->     2 3'010
      8:     2 3'101   ->     3 3'010
      9:     2 3'11-   ->     3 3'010
     10:     3 3'10-   ->     0 3'001
     11:     3 3'11-   ->     3 3'001
     12:     3 3'0--   ->     3 3'001

-------------------------------------

FSM `$fsm$\top_inst.dinoGame.controller.state$2258' from module `ice40hx8k':
-------------------------------------

  Information on FSM $fsm$\top_inst.dinoGame.controller.state$2258 (\top_inst.dinoGame.controller.state):

  Number of input signals:    7
  Number of output signals:   9
  Number of state bits:      10

  Input signals:
    0: \top_inst.dinoGame.controller.drawBlock.block_done
    1: $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:304$74_Y
    2: $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:288$69_Y
    3: $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:243$55_Y
    4: $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:225$50_Y
    5: $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:182$33_Y
    6: $flatten\top_inst.\dinoGame.\controller.$logic_and$source/parallelDisplay.sv:179$32_Y

  Output signals:
    0: $flatten\top_inst.\dinoGame.\controller.$procmux$1922_CMP
    1: $flatten\top_inst.\dinoGame.\controller.$procmux$1919_CMP
    2: $flatten\top_inst.\dinoGame.\controller.$procmux$1906_CMP
    3: $flatten\top_inst.\dinoGame.\controller.$procmux$1900_CMP
    4: $flatten\top_inst.\dinoGame.\controller.$procmux$1894_CMP
    5: $flatten\top_inst.\dinoGame.\controller.$procmux$1891_CMP
    6: $flatten\top_inst.\dinoGame.\controller.$procmux$1885_CMP
    7: $flatten\top_inst.\dinoGame.\controller.$procmux$1875_CMP
    8: $flatten\top_inst.\dinoGame.\controller.$procmux$1874_CMP

  State encoding:
    0: 10'---------1  <RESET STATE>
    1: 10'--------1-
    2: 10'-------1--
    3: 10'------1---
    4: 10'-----1----
    5: 10'----1-----
    6: 10'---1------
    7: 10'--1-------
    8: 10'-1--------
    9: 10'1---------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'------0   ->     0 9'000000001
      1:     0 7'------1   ->     5 9'000000001
      2:     1 7'-----00   ->     1 9'001000000
      3:     1 7'-----10   ->     6 9'001000000
      4:     1 7'------1   ->     6 9'001000000
      5:     2 7'--0---0   ->     2 9'000000100
      6:     2 7'--1---0   ->     9 9'000000100
      7:     2 7'------1   ->     9 9'000000100
      8:     3 7'01-----   ->     2 9'000000000
      9:     3 7'00-----   ->     3 9'000000000
     10:     3 7'1------   ->     8 9'000000000
     11:     4 7'------1   ->     3 9'000010000
     12:     4 7'------0   ->     4 9'000010000
     13:     5 7'------1   ->     3 9'000000010
     14:     5 7'------0   ->     5 9'000000010
     15:     6 7'------1   ->     3 9'100000000
     16:     6 7'------0   ->     6 9'100000000
     17:     7 7'---1--0   ->     1 9'000001000
     18:     7 7'------1   ->     1 9'000001000
     19:     7 7'---0--0   ->     7 9'000001000
     20:     8 7'------1   ->     4 9'010000000
     21:     8 7'------0   ->     8 9'010000000
     22:     9 7'----1-0   ->     7 9'000100000
     23:     9 7'------1   ->     7 9'000100000
     24:     9 7'----0-0   ->     9 9'000100000

-------------------------------------

14.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\top_inst.dinoGame.controller.drawBlock.state$2252' from module `\ice40hx8k'.
Mapping FSM `$fsm$\top_inst.dinoGame.controller.state$2258' from module `\ice40hx8k'.

14.12. Executing OPT pass (performing simple optimizations).

14.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~22 debug messages>

14.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

14.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\top_inst.\dinoGame.\scoreCounter.$procdff$2146 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.scoreCounter.n_score, Q = \top_inst.dinoGame.scoreCounter.score).
Adding EN signal on $flatten\top_inst.\dinoGame.\game.$procdff$2165 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.game.next_state, Q = \top_inst.dinoGame.game.state).
Adding EN signal on $flatten\top_inst.\dinoGame.\dinoJump.$procdff$2163 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\dinoJump.$2\next_v[7:0], Q = \top_inst.dinoGame.dinoJump.v).
Adding EN signal on $flatten\top_inst.\dinoGame.\dinoJump.$procdff$2161 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\dinoJump.$2\next_count[20:0], Q = \top_inst.dinoGame.dinoJump.count).
Adding EN signal on $flatten\top_inst.\dinoGame.\dinoJump.$procdff$2160 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.dinoJump.n_dinoMovement, Q = \top_inst.dinoGame.dinoJump.dinoMovement).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\init_module.$procdff$2170 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1767_Y, Q = \top_inst.dinoGame.controller.init_module.delay_counter).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\init_module.$procdff$2169 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\init_module.$0\idx[5:0], Q = \top_inst.dinoGame.controller.init_module.idx).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\init_module.$procdff$2167 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\init_module.$0\wr[0:0], Q = \top_inst.dinoGame.controller.init_module.wr).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procdff$2175 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1831_Y, Q = \top_inst.dinoGame.controller.drawBlock.counter).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procdff$2174 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1841_Y, Q = \top_inst.dinoGame.controller.drawBlock.idx).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procdff$2172 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1864_Y, Q = \top_inst.dinoGame.controller.drawBlock.wr).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procdff$2171 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1869_Y, Q = \top_inst.dinoGame.controller.drawBlock.block_done).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.$procdff$2193 ($dff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$0\color[15:0], Q = \top_inst.dinoGame.controller.color).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.$procdff$2190 ($dff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$0\y_end[7:0], Q = \top_inst.dinoGame.controller.y_end).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.$procdff$2187 ($dff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$0\y_start[7:0], Q = \top_inst.dinoGame.controller.y_start).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.$procdff$2184 ($dff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$0\x_end[8:0], Q = \top_inst.dinoGame.controller.x_end).
Adding EN signal on $flatten\top_inst.\dinoGame.\controller.$procdff$2181 ($dff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$0\x_start[8:0], Q = \top_inst.dinoGame.controller.x_start).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusMove.$procdff$2159 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactusMove.n_cactusMovement, Q = \top_inst.dinoGame.cactusMove.cactusMovement).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusMove.$procdff$2156 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactusMove.$3\n_h2[8:0], Q = \top_inst.dinoGame.cactusMove.height2).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusMove.$procdff$2155 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactusMove.$3\n_h1[8:0], Q = \top_inst.dinoGame.cactusMove.height1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusMove.$procdff$2154 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0], Q = \top_inst.dinoGame.cactusMove.x_dist).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$3\clk1[0:0], Q = \top_inst.dinoGame.cactusDist.clock_div_inst1.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$3\clk1[0:0], Q = \top_inst.dinoGame.cactusDist.clock_div_inst0.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusDist.$procdff$2153 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactusDist.n_lfsr1, Q = \top_inst.dinoGame.cactusDist.lfsr1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusDist.$procdff$2152 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactusDist.n_lfsr2, Q = \top_inst.dinoGame.cactusDist.lfsr2).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$3\clk1[0:0], Q = \top_inst.dinoGame.cactus2size.clock_div_inst1.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$3\clk1[0:0], Q = \top_inst.dinoGame.cactus2size.clock_div_inst0.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus2size.$procdff$2153 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactus2size.n_lfsr1, Q = \top_inst.dinoGame.cactus2size.lfsr1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus2size.$procdff$2152 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactus2size.n_lfsr2, Q = \top_inst.dinoGame.cactus2size.lfsr2).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$3\clk1[0:0], Q = \top_inst.dinoGame.cactus1size.clock_div_inst1.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$procdff$2151 ($adff) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$3\clk1[0:0], Q = \top_inst.dinoGame.cactus1size.clock_div_inst0.clk1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus1size.$procdff$2153 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactus1size.n_lfsr1, Q = \top_inst.dinoGame.cactus1size.lfsr1).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactus1size.$procdff$2152 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactus1size.n_lfsr2, Q = \top_inst.dinoGame.cactus1size.lfsr2).

14.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 24 unused cells and 61 unused wires.
<suppressed ~30 debug messages>

14.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~9 debug messages>

14.12.9. Rerunning OPT passes. (Maybe there is more to do..)

14.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

14.12.13. Executing OPT_DFF pass (perform DFF optimizations).

14.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

14.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.12.16. Rerunning OPT passes. (Maybe there is more to do..)

14.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.12.20. Executing OPT_DFF pass (perform DFF optimizations).

14.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.12.23. Finished OPT passes. (There is nothing left to do.)

14.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$mem.cc:328:emit$622 ($flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2513 ($ne).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2510 ($ne).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2505 ($ne).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2502 ($ne).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2423 ($ne).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$fsm_map.cc:77:implement_pattern_cache$2340 ($eq).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$auto$opt_dff.cc:195:make_patterns_logic$2432 ($ne).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$le$source/parallelDisplay.sv:385$79 ($le).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80 ($add).
Removed top 27 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80 ($add).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$eq$source/parallelDisplay.sv:388$81 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:390$82 ($add).
Removed top 11 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:390$82 ($add).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$83 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$84 ($add).
Removed top 23 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$85 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$86 ($add).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1779_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1780_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1781_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1782_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1783_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1784_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1785_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1786_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1787_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1788_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1813_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1815_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$eq$source/parallelDisplay.sv:534$95 ($eq).
Removed top 3 bits (of 6) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$eq$source/parallelDisplay.sv:534$96 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98 ($add).
Removed top 8 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98 ($add).
Removed top 6 bits (of 24) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$ge$source/parallelDisplay.sv:537$99 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:539$100 ($add).
Removed top 26 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:539$100 ($add).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$lt$source/parallelDisplay.sv:542$101 ($lt).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1736_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1737_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1739 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1742 ($mux).
Removed top 2 bits (of 4) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1744 ($mux).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1746_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$2003 ($mux).
Removed top 1 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1999 ($mux).
Removed top 1 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1988 ($mux).
Removed top 1 bits (of 8) from mux cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1984 ($mux).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:304$73 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:304$73 ($sub).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72 ($add).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72 ($add).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68 ($sub).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67 ($add).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67 ($add).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$54 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$54 ($sub).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$53 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$53 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$49 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$49 ($sub).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48 ($sub).
Removed top 22 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48 ($sub).
Removed top 30 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47 ($add).
Removed top 24 bits (of 32) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:211$46 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:204$44 ($sub).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:204$44 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43 ($sub).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43 ($sub).
Removed top 24 bits (of 32) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43 ($sub).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$42 ($sub).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:200$40 ($lt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$ge$source/parallelDisplay.sv:200$39 ($ge).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:198$38 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:198$38 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37 ($add).
Removed top 1 bits (of 8) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$eq$source/parallelDisplay.sv:194$35 ($eq).
Removed top 1 bits (of 8) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:129$29 ($add).
Removed top 1 bits (of 8) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:123$27 ($add).
Removed top 2 bits (of 8) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:117$25 ($add).
Removed top 25 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\game.$gt$source/GameState.sv:43$107 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134 ($sub).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134 ($sub).
Removed top 28 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130 ($add).
Removed top 24 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128 ($add).
Removed top 11 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128 ($add).
Removed top 2 bits (of 21) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$eq$source/dinoJump.sv:170$127 ($eq).
Removed top 2 bits (of 21) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$eq$source/dinoJump.sv:111$123 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122 ($add).
Removed top 11 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122 ($add).
Removed top 1 bits (of 8) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$eq$source/dinoJump.sv:55$115 ($eq).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$procmux$1372_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$procmux$1351_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$procmux$1330_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150 ($add).
Removed top 23 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150 ($add).
Removed top 14 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$eq$source/cactusmove.sv:67$145 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:66$144 ($add).
Removed top 4 bits (of 9) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:67$231 ($add).
Removed top 1 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:65$227 ($le).
Removed top 2 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:65$226 ($add).
Removed top 4 bits (of 9) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:40$219 ($add).
Removed top 1 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:38$215 ($le).
Removed top 2 bits (of 9) from port A of cell ice40hx8k.$flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:38$214 ($add).
Removed top 11 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 12 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.$procmux$1314_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.$procmux$1313_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP0 ($eq).
Removed top 11 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 13 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 11 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
Removed top 12 bits (of 14) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$eq$source/random_generator.sv:121$171 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 18 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
Removed top 6 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$ge$source/score_counter.sv:171$202 ($ge).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$add$source/score_counter.sv:177$203 ($add).
Removed top 6 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$add$source/score_counter.sv:177$203 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180 ($add).
Removed top 25 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180 ($add).
Removed top 25 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$lt$source/score_counter.sv:65$179 ($lt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178 ($sub).
Removed top 25 bits (of 32) from port Y of cell ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178 ($sub).
Removed top 18 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172_Y.
Removed top 18 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172_Y.
Removed top 18 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172_Y.
Removed top 18 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172_Y.
Removed top 18 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172_Y.
Removed top 23 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61_Y.
Removed top 22 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67_Y.
Removed top 22 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72_Y.
Removed top 1 bits (of 8) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1984_Y.
Removed top 1 bits (of 8) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1988_Y.
Removed top 1 bits (of 8) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$1999_Y.
Removed top 1 bits (of 8) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.$procmux$2003_Y.
Removed top 27 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80_Y.
Removed top 8 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98_Y.
Removed top 3 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1739_Y.
Removed top 2 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1742_Y.
Removed top 2 bits (of 4) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1744_Y.
Removed top 11 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122_Y.
Removed top 11 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130_Y.
Removed top 24 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134_Y.
Removed top 25 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180_Y.
Removed top 25 bits (of 32) from wire ice40hx8k.$flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178_Y.

14.14. Executing PEEPOPT pass (run peephole optimizers).

14.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

14.16. Executing SHARE pass (SAT-based resource sharing).

14.17. Executing TECHMAP pass (map to technology primitives).

14.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

14.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~452 debug messages>

14.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$add$source/random_generator.sv:126$172 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:66$144 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:19$212 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:38$214 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:40$219 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:65$226 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:67$231 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:117$25 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:123$27 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:129$29 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:198$38 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$42 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:204$44 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:211$46 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$49 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$53 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$54 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:270$65 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:277$66 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:304$73 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:390$82 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$84 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$86 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$mul$source/parallelDisplay.sv:392$87 ($mul).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$83 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$85 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:539$100 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:183$131 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180 ($add).
  creating $macc model for $flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178 ($sub).
  creating $macc model for $flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$add$source/score_counter.sv:177$203 ($add).
  merging $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$42 into $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43.
  merging $macc model for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:211$46 into $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:183$131.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:539$100.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$85.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$83.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$86.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$84.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:390$82.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:304$73.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:277$66.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:270$65.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$54.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$53.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$49.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$add$source/score_counter.sv:177$203.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:204$44.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:198$38.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:129$29.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:123$27.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:117$25.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:67$231.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:65$226.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:40$219.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:38$214.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:19$212.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:66$144.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$add$source/random_generator.sv:126$172.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172.
  creating $alu model for $macc $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172.
  creating $macc cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:203$43: $auto$alumacc.cc:365:replace_macc$2549
  creating $macc cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$mul$source/parallelDisplay.sv:392$87: $auto$alumacc.cc:365:replace_macc$2550
  creating $macc cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:211$47: $auto$alumacc.cc:365:replace_macc$2551
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:38$215 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:40$220 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:49$224 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:65$227 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:67$232 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:76$236 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:40$217 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:49$222 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:67$229 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:76$234 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$ge$source/parallelDisplay.sv:200$39 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:225$50 ($gt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:243$55 ($gt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:200$40 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:288$69 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:304$74 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$gt$source/parallelDisplay.sv:408$89 ($gt): merged with $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$83.
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$gt$source/parallelDisplay.sv:408$90 ($gt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$le$source/parallelDisplay.sv:385$79 ($le): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\init_module.$ge$source/parallelDisplay.sv:537$99 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\init_module.$lt$source/parallelDisplay.sv:542$101 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\game.$gt$source/GameState.sv:43$107 ($gt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\scoreCounter.$lt$source/score_counter.sv:65$179 ($lt): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$ge$source/score_counter.sv:171$202 ($ge): new $alu
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1779_CMP0 ($eq): merged with $flatten\top_inst.\dinoGame.\controller.\drawBlock.$le$source/parallelDisplay.sv:385$79.
  creating $alu model for $flatten\top_inst.\dinoGame.\controller.\init_module.$eq$source/parallelDisplay.sv:534$96 ($eq): merged with $flatten\top_inst.\dinoGame.\controller.\init_module.$lt$source/parallelDisplay.sv:542$101.
  creating $alu model for $flatten\top_inst.\dinoGame.\game.$eq$source/GameState.sv:46$108 ($eq): merged with $flatten\top_inst.\dinoGame.\scoreCounter.$lt$source/score_counter.sv:65$179.
  creating $alu cell for $flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$ge$source/score_counter.sv:171$202: $auto$alumacc.cc:485:replace_alu$2575
  creating $alu cell for $flatten\top_inst.\dinoGame.\scoreCounter.$lt$source/score_counter.sv:65$179, $flatten\top_inst.\dinoGame.\game.$eq$source/GameState.sv:46$108: $auto$alumacc.cc:485:replace_alu$2588
  creating $alu cell for $flatten\top_inst.\dinoGame.\game.$gt$source/GameState.sv:43$107: $auto$alumacc.cc:485:replace_alu$2595
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\init_module.$lt$source/parallelDisplay.sv:542$101, $flatten\top_inst.\dinoGame.\controller.\init_module.$eq$source/parallelDisplay.sv:534$96: $auto$alumacc.cc:485:replace_alu$2606
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\init_module.$ge$source/parallelDisplay.sv:537$99: $auto$alumacc.cc:485:replace_alu$2617
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$le$source/parallelDisplay.sv:385$79, $flatten\top_inst.\dinoGame.\controller.\drawBlock.$procmux$1779_CMP0: $auto$alumacc.cc:485:replace_alu$2626
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$gt$source/parallelDisplay.sv:408$90: $auto$alumacc.cc:485:replace_alu$2639
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:304$74: $auto$alumacc.cc:485:replace_alu$2650
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:288$69: $auto$alumacc.cc:485:replace_alu$2655
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$lt$source/parallelDisplay.sv:200$40: $auto$alumacc.cc:485:replace_alu$2660
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:243$55: $auto$alumacc.cc:485:replace_alu$2671
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$gt$source/parallelDisplay.sv:225$50: $auto$alumacc.cc:485:replace_alu$2676
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$ge$source/parallelDisplay.sv:200$39: $auto$alumacc.cc:485:replace_alu$2681
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:76$234: $auto$alumacc.cc:485:replace_alu$2690
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:67$229: $auto$alumacc.cc:485:replace_alu$2695
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:49$222: $auto$alumacc.cc:485:replace_alu$2700
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$lt$source/collision_detector.sv:40$217: $auto$alumacc.cc:485:replace_alu$2705
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:76$236: $auto$alumacc.cc:485:replace_alu$2710
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:67$232: $auto$alumacc.cc:485:replace_alu$2723
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:65$227: $auto$alumacc.cc:485:replace_alu$2736
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:49$224: $auto$alumacc.cc:485:replace_alu$2745
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:40$220: $auto$alumacc.cc:485:replace_alu$2758
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$le$source/collision_detector.sv:38$215: $auto$alumacc.cc:485:replace_alu$2771
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst0.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2780
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactus1size.\clock_div_inst1.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2783
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst0.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2786
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactus2size.\clock_div_inst1.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2789
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst0.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2792
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactusDist.\clock_div_inst1.$add$source/random_generator.sv:126$172: $auto$alumacc.cc:485:replace_alu$2795
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:108$150: $auto$alumacc.cc:485:replace_alu$2798
  creating $alu cell for $flatten\top_inst.\dinoGame.\cactusMove.$add$source/cactusmove.sv:66$144: $auto$alumacc.cc:485:replace_alu$2801
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:19$212: $auto$alumacc.cc:485:replace_alu$2804
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:38$214: $auto$alumacc.cc:485:replace_alu$2807
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:40$219: $auto$alumacc.cc:485:replace_alu$2810
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:65$226: $auto$alumacc.cc:485:replace_alu$2813
  creating $alu cell for $flatten\top_inst.\dinoGame.\collision.$add$source/collision_detector.sv:67$231: $auto$alumacc.cc:485:replace_alu$2816
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:117$25: $auto$alumacc.cc:485:replace_alu$2819
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:123$27: $auto$alumacc.cc:485:replace_alu$2822
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:129$29: $auto$alumacc.cc:485:replace_alu$2825
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:197$37: $auto$alumacc.cc:485:replace_alu$2828
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:198$38: $auto$alumacc.cc:485:replace_alu$2831
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:265$61: $auto$alumacc.cc:485:replace_alu$2834
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:288$67: $auto$alumacc.cc:485:replace_alu$2837
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$add$source/parallelDisplay.sv:304$72: $auto$alumacc.cc:485:replace_alu$2840
  creating $alu cell for $flatten\top_inst.\dinoGame.\scoreCounter.$sub$source/score_counter.sv:62$178: $auto$alumacc.cc:485:replace_alu$2843
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:204$44: $auto$alumacc.cc:485:replace_alu$2846
  creating $alu cell for $flatten\top_inst.\dinoGame.\scoreCounter.\clock_div.$add$source/score_counter.sv:177$203: $auto$alumacc.cc:485:replace_alu$2849
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48: $auto$alumacc.cc:485:replace_alu$2852
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$49: $auto$alumacc.cc:485:replace_alu$2855
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$53: $auto$alumacc.cc:485:replace_alu$2858
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:243$54: $auto$alumacc.cc:485:replace_alu$2861
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:270$65: $auto$alumacc.cc:485:replace_alu$2864
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:277$66: $auto$alumacc.cc:485:replace_alu$2867
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68: $auto$alumacc.cc:485:replace_alu$2870
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:304$73: $auto$alumacc.cc:485:replace_alu$2873
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:386$80: $auto$alumacc.cc:485:replace_alu$2876
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:390$82: $auto$alumacc.cc:485:replace_alu$2879
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$84: $auto$alumacc.cc:485:replace_alu$2882
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$86: $auto$alumacc.cc:485:replace_alu$2885
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$83, $flatten\top_inst.\dinoGame.\controller.\drawBlock.$gt$source/parallelDisplay.sv:408$89: $auto$alumacc.cc:485:replace_alu$2888
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\drawBlock.$sub$source/parallelDisplay.sv:392$85: $auto$alumacc.cc:485:replace_alu$2893
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:536$98: $auto$alumacc.cc:485:replace_alu$2896
  creating $alu cell for $flatten\top_inst.\dinoGame.\controller.\init_module.$add$source/parallelDisplay.sv:539$100: $auto$alumacc.cc:485:replace_alu$2899
  creating $alu cell for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:109$122: $auto$alumacc.cc:485:replace_alu$2902
  creating $alu cell for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:175$128: $auto$alumacc.cc:485:replace_alu$2905
  creating $alu cell for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:180$130: $auto$alumacc.cc:485:replace_alu$2908
  creating $alu cell for $flatten\top_inst.\dinoGame.\dinoJump.$add$source/dinoJump.sv:183$131: $auto$alumacc.cc:485:replace_alu$2911
  creating $alu cell for $flatten\top_inst.\dinoGame.\dinoJump.$sub$source/dinoJump.sv:190$134: $auto$alumacc.cc:485:replace_alu$2914
  creating $alu cell for $flatten\top_inst.\dinoGame.\scoreCounter.$add$source/score_counter.sv:66$180: $auto$alumacc.cc:485:replace_alu$2917
  created 69 $alu and 3 $macc cells.

14.21. Executing OPT pass (performing simple optimizations).

14.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~22 debug messages>

14.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.21.6. Executing OPT_DFF pass (perform DFF optimizations).

14.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 29 unused wires.
<suppressed ~3 debug messages>

14.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.21.9. Rerunning OPT passes. (Maybe there is more to do..)

14.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

14.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.21.13. Executing OPT_DFF pass (perform DFF optimizations).

14.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.21.16. Finished OPT passes. (There is nothing left to do.)

14.22. Executing MEMORY pass.

14.22.1. Executing OPT_MEM pass (optimize memories).
ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620: removing const-0 lane 0
ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620: removing const-1 lane 2
ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620: removing const-0 lane 10
Performed a total of 1 transformations.

14.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

14.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

14.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

14.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620'[0] in module `\ice40hx8k': no output FF found.
Checking read port address `$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620'[0] in module `\ice40hx8k': address FF has async set and/or reset, not supported.

14.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

14.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

14.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

14.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620
<suppressed ~14 debug messages>

14.25. Executing TECHMAP pass (map to technology primitives).

14.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

14.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

14.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

14.26. Executing ICE40_BRAMINIT pass.

14.27. Executing OPT pass (performing simple optimizations).

14.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~91 debug messages>

14.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

14.27.3. Executing OPT_DFF pass (perform DFF optimizations).

14.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 5 unused cells and 69 unused wires.
<suppressed ~6 debug messages>

14.27.5. Finished fast OPT passes.

14.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620 in module \ice40hx8k:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

14.29. Executing OPT pass (performing simple optimizations).

14.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

14.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][2][2]$3005:
      Old ports: A=8'10101011, B=8'00100010, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997 [0]
      New connections: $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997 [7:1] = { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997 [0] 3'010 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997 [0] 2'01 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][2][1]$3002:
      Old ports: A=8'01010000, B=8'01110100, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995 [2]
      New connections: { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995 [7:3] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995 [1:0] } = { 2'01 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995 [2] 4'1000 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][2][0]$2999:
      Old ports: A=8'00000000, B=8'00000010, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994
      New ports: A=1'0, B=1'1, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994 [1]
      New connections: { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994 [7:2] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994 [0] } = 7'0000000
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1327:
      Old ports: A=9'000001111, B=27'000010100000011110000101000, Y=$flatten\top_inst.\dinoGame.\cactusMove.$3\n_h2[8:0]
      New ports: A=6'001111, B=18'010100011110101000, Y=$flatten\top_inst.\dinoGame.\cactusMove.$3\n_h2[8:0] [5:0]
      New connections: $flatten\top_inst.\dinoGame.\cactusMove.$3\n_h2[8:0] [8:6] = 3'000
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1348:
      Old ports: A=9'000001111, B=27'000010100000011110000101000, Y=$flatten\top_inst.\dinoGame.\cactusMove.$3\n_h1[8:0]
      New ports: A=6'001111, B=18'010100011110101000, Y=$flatten\top_inst.\dinoGame.\cactusMove.$3\n_h1[8:0] [5:0]
      New connections: $flatten\top_inst.\dinoGame.\cactusMove.$3\n_h1[8:0] [8:6] = 3'000
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1369:
      Old ports: A=9'001100100, B=27'010000010010100000010110100, Y=$flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0]
      New ports: A=6'011010, B=18'100001101000101110, Y={ $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0] [7:4] $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0] [2:1] }
      New connections: { $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0] [8] $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0] [3] $flatten\top_inst.\dinoGame.\cactusMove.$3\x_distance[8:0] [0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1405:
      Old ports: A=\top_inst.dinoGame.cactusMove.pixel, B={ $auto$wreduce.cc:461:run$2527 [8:2] \top_inst.dinoGame.cactusMove.pixel [1:0] }, Y=$flatten\top_inst.\dinoGame.\cactusMove.$2\n_pixel[8:0]
      New ports: A=\top_inst.dinoGame.cactusMove.pixel [8:2], B=$auto$wreduce.cc:461:run$2527 [8:2], Y=$flatten\top_inst.\dinoGame.\cactusMove.$2\n_pixel[8:0] [8:2]
      New connections: $flatten\top_inst.\dinoGame.\cactusMove.$2\n_pixel[8:0] [1:0] = \top_inst.dinoGame.cactusMove.pixel [1:0]
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1926:
      Old ports: A=16'1110111011101110, B=16'0000000000000000, Y=$flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y
      New ports: A=1'1, B=1'0, Y=$flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1]
      New connections: { $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [15:2] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [0] } = { $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1930:
      Old ports: A=16'1110111011101110, B=16'0000011111100000, Y=$flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [8] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] }
      New connections: { $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [15:9] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [7:2] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [0] } = { $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] 6'111110 $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1984:
      Old ports: A=7'0000001, B=7'1100101, Y=$auto$wreduce.cc:461:run$2533 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2533 [2]
      New connections: { $auto$wreduce.cc:461:run$2533 [6:3] $auto$wreduce.cc:461:run$2533 [1:0] } = { $auto$wreduce.cc:461:run$2533 [2] $auto$wreduce.cc:461:run$2533 [2] 4'0001 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1988:
      Old ports: A=7'0000001, B=7'1100101, Y=$auto$wreduce.cc:461:run$2534 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2534 [2]
      New connections: { $auto$wreduce.cc:461:run$2534 [6:3] $auto$wreduce.cc:461:run$2534 [1:0] } = { $auto$wreduce.cc:461:run$2534 [2] $auto$wreduce.cc:461:run$2534 [2] 4'0001 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1999:
      Old ports: A=7'0000001, B=7'1100101, Y=$auto$wreduce.cc:461:run$2535 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2535 [2]
      New connections: { $auto$wreduce.cc:461:run$2535 [6:3] $auto$wreduce.cc:461:run$2535 [1:0] } = { $auto$wreduce.cc:461:run$2535 [2] $auto$wreduce.cc:461:run$2535 [2] 4'0001 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2003:
      Old ports: A=7'0000001, B=7'1100101, Y=$auto$wreduce.cc:461:run$2536 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$2536 [2]
      New connections: { $auto$wreduce.cc:461:run$2536 [6:3] $auto$wreduce.cc:461:run$2536 [1:0] } = { $auto$wreduce.cc:461:run$2536 [2] $auto$wreduce.cc:461:run$2536 [2] 4'0001 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][2][3]$3008:
      Old ports: A=8'01010010, B=8'00000000, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [1]
      New connections: { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [7:2] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [0] } = { 1'0 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [1] 1'0 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [1] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1732:
      Old ports: A=11'00000000100, B={ 1'0 $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [9:3] 1'1 $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] 1'0 }, Y={ \top_inst.dinoGame.controller.data_init \top_inst.dinoGame.controller.rd_init \top_inst.dinoGame.controller.cd_init \top_inst.dinoGame.controller.cs_init }
      New ports: A=8'00000000, B={ $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [9:3] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }, Y={ \top_inst.dinoGame.controller.data_init [6:0] \top_inst.dinoGame.controller.cd_init }
      New connections: { \top_inst.dinoGame.controller.data_init [7] \top_inst.dinoGame.controller.rd_init \top_inst.dinoGame.controller.cs_init } = 3'010
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1735:
      Old ports: A=4'0000, B={ 2'00 $auto$wreduce.cc:461:run$2541 [1:0] 8'00010011 }, Y=$flatten\top_inst.\dinoGame.\controller.\init_module.$0\state[3:0]
      New ports: A=2'00, B={ $auto$wreduce.cc:461:run$2541 [1:0] 4'0111 }, Y=$flatten\top_inst.\dinoGame.\controller.\init_module.$0\state[3:0] [1:0]
      New connections: $flatten\top_inst.\dinoGame.\controller.\init_module.$0\state[3:0] [3:2] = 2'00
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\game.$procmux$1712:
      Old ports: A=3'010, B=3'011, Y=$flatten\top_inst.\dinoGame.\game.$3\next_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\top_inst.\dinoGame.\game.$3\next_state[2:0] [0]
      New connections: $flatten\top_inst.\dinoGame.\game.$3\next_state[2:0] [2:1] = 2'01
    New ctrl vector for $pmux cell $flatten\top_inst.\dinoGame.\game.$procmux$1726: { $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1316_CMP $flatten\top_inst.\dinoGame.\cactus1size.$procmux$1302_CMP }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$2996:
      Old ports: A=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997, B=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992
      New ports: A={ 3'101 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$a$2997 [0] }, B={ 1'0 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [1] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][1]$b$2998 [1] 1'0 }, Y={ $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [5:4] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [1:0] }
      New connections: { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [7:6] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [3:2] } = { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [0] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [4] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$2993:
      Old ports: A=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994, B=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995, Y=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991
      New ports: A={ 2'00 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$a$2994 [1] }, B={ 1'1 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][1][0]$b$2995 [2] 1'0 }, Y={ $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [4] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [2:1] }
      New connections: { $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [7:5] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [3] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [0] } = { 1'0 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [4] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\cactusMove.$procmux$1412:
      Old ports: A=\top_inst.dinoGame.cactusMove.pixel, B=$flatten\top_inst.\dinoGame.\cactusMove.$2\n_pixel[8:0], Y=\top_inst.dinoGame.cactusMove.n_pixel
      New ports: A=\top_inst.dinoGame.cactusMove.pixel [8:2], B=$flatten\top_inst.\dinoGame.\cactusMove.$2\n_pixel[8:0] [8:2], Y=\top_inst.dinoGame.cactusMove.n_pixel [8:2]
      New connections: \top_inst.dinoGame.cactusMove.n_pixel [1:0] = \top_inst.dinoGame.cactusMove.pixel [1:0]
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\controller.$procmux$1923:
      Old ports: A=16'1110111011101110, B={ $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y 16'0000000000000000 }, Y=$flatten\top_inst.\dinoGame.\controller.$0\color[15:0]
      New ports: A=3'011, B={ $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [8] 1'1 $flatten\top_inst.\dinoGame.\controller.$procmux$1930_Y [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] $flatten\top_inst.\dinoGame.\controller.$procmux$1926_Y [1] 3'000 }, Y={ $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [8] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [5] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] }
      New connections: { $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [15:9] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [7:6] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [4:2] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [0] } = { $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] 1'0 $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [5] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [5] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [5] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [5] 1'0 $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] $flatten\top_inst.\dinoGame.\controller.$0\color[15:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$ternary$source/parallelDisplay.sv:109$22:
      Old ports: A={ \top_inst.dinoGame.controller.cs_init \top_inst.dinoGame.controller.cd_init \top_inst.dinoGame.controller.init_module.wr \top_inst.dinoGame.controller.rd_init \top_inst.dinoGame.controller.data_init }, B={ 1'0 \top_inst.dinoGame.controller.cd_draw \top_inst.dinoGame.controller.drawBlock.wr 1'1 \top_inst.dinoGame.controller.data_draw }, Y={ \ss0 [3:0] \ss1 }
      New ports: A={ \top_inst.dinoGame.controller.cd_init \top_inst.dinoGame.controller.init_module.wr 1'0 \top_inst.dinoGame.controller.data_init [6:0] }, B={ \top_inst.dinoGame.controller.cd_draw \top_inst.dinoGame.controller.drawBlock.wr \top_inst.dinoGame.controller.data_draw }, Y={ \ss0 [2:1] \ss1 }
      New connections: { \ss0 [3] \ss0 [0] } = 2'01
    Consolidated identical input bits for $pmux cell $flatten\top_inst.\dinoGame.\game.$procmux$1726:
      Old ports: A=3'000, B={ 3'001 $flatten\top_inst.\dinoGame.\game.$3\next_state[2:0] }, Y=\top_inst.dinoGame.game.next_state
      New ports: A=2'00, B={ 3'011 $flatten\top_inst.\dinoGame.\game.$3\next_state[2:0] [0] }, Y=\top_inst.dinoGame.game.next_state [1:0]
      New connections: \top_inst.dinoGame.game.next_state [2] = 1'0
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$2990:
      Old ports: A=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991, B=$memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992, Y={ $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [9:3] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }
      New ports: A={ $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [2] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [4] $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$a$2991 [2:1] 1'0 }, B={ $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [5:4] 1'0 $memory$flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:155:do_switch$620$rdmux[0][0][0]$b$2992 [1:0] }, Y={ $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [7:6] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [4:3] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }
      New connections: { $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [9:8] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [5] } = { $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [6] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.\init_module.$procmux$1732:
      Old ports: A=8'00000000, B={ $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [9:3] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }, Y={ \top_inst.dinoGame.controller.data_init [6:0] \top_inst.dinoGame.controller.cd_init }
      New ports: A=5'00000, B={ $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [7:6] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [4:3] $flatten\top_inst.\dinoGame.\controller.\init_module.$auto$proc_rom.cc:154:do_switch$619 [1] }, Y={ \top_inst.dinoGame.controller.data_init [4:3] \top_inst.dinoGame.controller.data_init [1:0] \top_inst.dinoGame.controller.cd_init }
      New connections: { \top_inst.dinoGame.controller.data_init [6:5] \top_inst.dinoGame.controller.data_init [2] } = { \top_inst.dinoGame.controller.cd_init \top_inst.dinoGame.controller.data_init [3] \top_inst.dinoGame.controller.cd_init }
  Optimizing cells in module \ice40hx8k.
Performed a total of 26 changes.

14.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

14.29.6. Executing OPT_DFF pass (perform DFF optimizations).

14.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

14.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.29.9. Rerunning OPT passes. (Maybe there is more to do..)

14.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

14.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\top_inst.\dinoGame.\cactusMove.$procdff$2157 ($adff) from module ice40hx8k (D = \top_inst.dinoGame.cactusMove.pixel [1:0], Q = \top_inst.dinoGame.cactusMove.pixel [1:0]).
Handling D = Q on $auto$ff.cc:266:slice$3011 ($adffe) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3011 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3011 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$2428 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$2481 ($dffe) from module ice40hx8k.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$2481 ($dffe) from module ice40hx8k.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$2481 ($dffe) from module ice40hx8k.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$2489 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$2489 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$2489 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$2492 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$2492 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$2492 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$2495 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$2495 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$2495 ($adffe) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\dinoGame.\controller.\init_module.$procdff$2168 ($adff) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\dinoGame.\controller.\init_module.$procdff$2168 ($adff) from module ice40hx8k.

14.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

14.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~34 debug messages>

14.29.16. Rerunning OPT passes. (Maybe there is more to do..)

14.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

14.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2022:
      Old ports: A=9'000000001, B={ $auto$wreduce.cc:461:run$2531 [8:2] 2'00 }, Y=$flatten\top_inst.\dinoGame.\controller.$procmux$2022_Y
      New ports: A=8'00000001, B={ $auto$wreduce.cc:461:run$2531 [8:2] 1'0 }, Y={ $flatten\top_inst.\dinoGame.\controller.$procmux$2022_Y [8:2] $flatten\top_inst.\dinoGame.\controller.$procmux$2022_Y [0] }
      New connections: $flatten\top_inst.\dinoGame.\controller.$procmux$2022_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2052:
      Old ports: A=9'000000001, B=$flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68_Y [8:0], Y=$flatten\top_inst.\dinoGame.\controller.$procmux$2052_Y
      New ports: A=8'00000001, B={ $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68_Y [8:3] \top_inst.dinoGame.controller.c1_x_end [2] $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:288$68_Y [0] }, Y={ $flatten\top_inst.\dinoGame.\controller.$procmux$2052_Y [8:2] $flatten\top_inst.\dinoGame.\controller.$procmux$2052_Y [0] }
      New connections: $flatten\top_inst.\dinoGame.\controller.$procmux$2052_Y [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\top_inst.\dinoGame.\controller.$procmux$2065:
      Old ports: A=9'000000001, B={ $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48_Y [8:2] 2'00 }, Y=$flatten\top_inst.\dinoGame.\controller.$procmux$2065_Y
      New ports: A=8'00000001, B={ $flatten\top_inst.\dinoGame.\controller.$sub$source/parallelDisplay.sv:225$48_Y [8:2] 1'0 }, Y={ $flatten\top_inst.\dinoGame.\controller.$procmux$2065_Y [8:2] $flatten\top_inst.\dinoGame.\controller.$procmux$2065_Y [0] }
      New connections: $flatten\top_inst.\dinoGame.\controller.$procmux$2065_Y [1] = 1'0
  Optimizing cells in module \ice40hx8k.
Performed a total of 3 changes.

14.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 4 cells.

14.29.20. Executing OPT_DFF pass (perform DFF optimizations).

14.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 2 unused cells and 11 unused wires.
<suppressed ~3 debug messages>

14.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.29.23. Rerunning OPT passes. (Maybe there is more to do..)

14.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

14.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.29.27. Executing OPT_DFF pass (perform DFF optimizations).

14.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.29.30. Finished OPT passes. (There is nothing left to do.)

14.30. Executing ICE40_WRAPCARRY pass (wrap carries).

14.31. Executing TECHMAP pass (map to technology primitives).

14.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

14.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$7af98a8d3d01ff58dee4212ab52569c379e064a1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_80_ice40_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_80_ice40_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \top_inst.dinoGame.dinoJump.dinoY (8 bits, unsigned)
  sub \top_inst.dinoGame.dinoJump.v (8 bits, unsigned)
  add 8'11111111 (8 bits, unsigned)
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using template $paramod$f31f04e77f067a6da635d02c4a81c0a799bf18a4\_80_ice40_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_80_ice40_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_80_ice40_alu for cells of type $alu.
  add { \top_inst.dinoGame.controller.d_y_end [7:3] \top_inst.dinoGame.dinoJump.dinoY [2:0] } (8 bits, unsigned)
  sub \top_inst.dinoGame.dinoJump.v (8 bits, unsigned)
  add 8'00000010 (8 bits, unsigned)
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_80_ice40_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$e1270c504307e9914695c839a36c0c6fc6336d88\_90_pmux for cells of type $pmux.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ice40_alu for cells of type $alu.
Using template $paramod$56efdfb6bbe33197ddecbfee63f8236e27d3c563\_80_ice40_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_80_ice40_alu for cells of type $alu.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$bdf7add1b5267c9fa97534fb537520e9b0e1f219\_90_pmux for cells of type $pmux.
Using template $paramod$72f7795a18b8bd21d2def9f98cbb7d0e4ff65a7f\_90_pmux for cells of type $pmux.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$10ed987432f06055e5279101f9ec60a49861b43c\_80_ice40_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_80_ice40_alu for cells of type $alu.
Using template $paramod$6eda0ef91434b0a63b1504b3097de136b7a9d5d5\_80_ice40_alu for cells of type $alu.
Using template $paramod$403d07c18de10cda2ac652a859c56aea81aaf9b5\_80_ice40_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$a8151eed7df109f18d5adf1169b40bb7b9e884a8\_80_ice40_alu for cells of type $alu.
  add $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$84_Y * $flatten\top_inst.\dinoGame.\controller.\drawBlock.$add$source/parallelDisplay.sv:392$86_Y (32x32 bits, unsigned)
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$9970e6a829a899c1fae39c88305c3c80d98a6bfd\_80_ice40_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_80_ice40_alu for cells of type $alu.
Using template $paramod$4f7462fd7944a40ab328577064922bdf555975a5\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_ice40_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_80_ice40_alu for cells of type $alu.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_80_ice40_alu for cells of type $alu.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001000 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~2215 debug messages>

14.32. Executing OPT pass (performing simple optimizations).

14.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5724 debug messages>

14.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~1935 debug messages>
Removed a total of 645 cells.

14.32.3. Executing OPT_DFF pass (perform DFF optimizations).

14.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 461 unused cells and 2446 unused wires.
<suppressed ~462 debug messages>

14.32.5. Finished fast OPT passes.

14.33. Executing ICE40_OPT pass (performing simple optimizations).

14.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2575.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.clock_div.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2588.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.score [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2595.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.score [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2606.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2606.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2617.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2617.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2626.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2626.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2650.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2655.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2655.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$2655.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2660.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2660.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2681.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2660.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2690.slice[0].carry: CO=\top_inst.dinoGame.collision.cactusX2 [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2695.slice[0].carry: CO=\top_inst.dinoGame.collision.cactusX2 [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2700.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2705.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2710.slice[0].carry: CO=\top_inst.dinoGame.controller.c2_x_end [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2723.slice[0].carry: CO=\top_inst.dinoGame.controller.c2_x_end [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2736.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$2736.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2745.slice[0].carry: CO=\top_inst.dinoGame.controller.c1_x_end [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2758.slice[0].carry: CO=\top_inst.dinoGame.controller.c1_x_end [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2771.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$2771.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2780.slice[0].carry: CO=\top_inst.dinoGame.cactus1size.clock_div_inst0.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2783.slice[0].carry: CO=\top_inst.dinoGame.cactus1size.clock_div_inst1.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2786.slice[0].carry: CO=\top_inst.dinoGame.cactus2size.clock_div_inst0.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2789.slice[0].carry: CO=\top_inst.dinoGame.cactus2size.clock_div_inst1.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2792.slice[0].carry: CO=\top_inst.dinoGame.cactusDist.clock_div_inst0.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2795.slice[0].carry: CO=\top_inst.dinoGame.cactusDist.clock_div_inst1.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2798.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2801.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2810.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2816.slice[0].carry: CO=\top_inst.dinoGame.collision.cactusX2 [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2819.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.height1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$2822.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.height2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$2825.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2828.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2831.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2834.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2837.slice[0].carry: CO=\top_inst.dinoGame.controller.c1_x_end [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2837.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2840.slice[0].carry: CO=\top_inst.dinoGame.controller.c2_x_end [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2840.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2843.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.score [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2846.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2849.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.clock_div.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2852.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2852.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$2852.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2858.slice[0].carry: CO=\top_inst.dinoGame.collision.cactusX2 [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2858.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$2858.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2876.slice[0].carry: CO=\top_inst.dinoGame.controller.drawBlock.idx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2879.slice[0].carry: CO=\top_inst.dinoGame.controller.drawBlock.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2882.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2882.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2885.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$2885.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2888.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$2888.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2893.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$2893.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2896.slice[0].carry: CO=\top_inst.dinoGame.controller.init_module.delay_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2899.slice[0].carry: CO=\top_inst.dinoGame.controller.init_module.idx [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2902.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoDelay [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2905.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2908.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.dinoY [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2914.slice[0].carry: CO=\top_inst.dinoGame.dinoJump.v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$2917.slice[0].carry: CO=\top_inst.dinoGame.scoreCounter.score [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$3732.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3023.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.pixel [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3023.slice[7].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3023.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3032.slice[0].carry: CO=\top_inst.dinoGame.controller.c1_x_end [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3032.slice[6].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3032.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3033.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.height1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3033.slice[6].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3033.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3033.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3037.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.height2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3037.slice[6].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3037.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3037.slice[7].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3047.slice[0].carry: CO=\top_inst.dinoGame.cactusMove.x_dist [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3047.slice[8].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3047.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3052.slice[0].carry: CO=\top_inst.dinoGame.controller.c2_x_end [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3052.slice[6].carry: CO=$auto$opt_expr.cc:1948:replace_const_cells$3052.C [6]

14.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

14.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6229 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1923.Y_B [0], Q = \top_inst.dinoGame.controller.color [14], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$6226 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1923.Y_B [1], Q = \top_inst.dinoGame.controller.color [10], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$6224 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1923.B_AND_S [8], Q = \top_inst.dinoGame.controller.color [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4272 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [8], Q = \top_inst.dinoGame.controller.x_start [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4271 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [7], Q = \top_inst.dinoGame.controller.x_start [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4270 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [6], Q = \top_inst.dinoGame.controller.x_start [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4269 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [5], Q = \top_inst.dinoGame.controller.x_start [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4268 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [4], Q = \top_inst.dinoGame.controller.x_start [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4267 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [3], Q = \top_inst.dinoGame.controller.x_start [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4266 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [2], Q = \top_inst.dinoGame.controller.x_start [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4265 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [1], Q = \top_inst.dinoGame.controller.x_start [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4264 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2045.Y_B [0], Q = \top_inst.dinoGame.controller.x_start [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4262 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [8], Q = \top_inst.dinoGame.controller.x_end [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4261 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [7], Q = \top_inst.dinoGame.controller.x_end [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4260 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [6], Q = \top_inst.dinoGame.controller.x_end [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4259 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [5], Q = \top_inst.dinoGame.controller.x_end [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4258 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [4], Q = \top_inst.dinoGame.controller.x_end [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4257 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [3], Q = \top_inst.dinoGame.controller.x_end [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4256 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [2], Q = \top_inst.dinoGame.controller.x_end [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4255 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [1], Q = \top_inst.dinoGame.controller.x_end [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4254 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$2015.Y_B [0], Q = \top_inst.dinoGame.controller.x_end [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4253 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [7], Q = \top_inst.dinoGame.controller.y_start [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4252 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [6], Q = \top_inst.dinoGame.controller.y_start [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4251 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [5], Q = \top_inst.dinoGame.controller.y_start [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4250 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [4], Q = \top_inst.dinoGame.controller.y_start [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4249 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [3], Q = \top_inst.dinoGame.controller.y_start [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4248 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [2], Q = \top_inst.dinoGame.controller.y_start [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4247 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [1], Q = \top_inst.dinoGame.controller.y_start [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4246 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1981.Y_B [0], Q = \top_inst.dinoGame.controller.y_start [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4244 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [7], Q = \top_inst.dinoGame.controller.y_end [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4243 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [6], Q = \top_inst.dinoGame.controller.y_end [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4242 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [5], Q = \top_inst.dinoGame.controller.y_end [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4241 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [4], Q = \top_inst.dinoGame.controller.y_end [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4240 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [3], Q = \top_inst.dinoGame.controller.y_end [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4239 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [2], Q = \top_inst.dinoGame.controller.y_end [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4238 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [1], Q = \top_inst.dinoGame.controller.y_end [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4237 ($_DFFE_PP_) from module ice40hx8k (D = $flatten\top_inst.\dinoGame.\controller.$procmux$1947.Y_B [0], Q = \top_inst.dinoGame.controller.y_end [0], rval = 1'1).

14.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 52 unused cells and 21 unused wires.
<suppressed ~53 debug messages>

14.33.6. Rerunning OPT passes. (Removed registers in this run.)

14.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[1].carry: CO=1'0

14.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.33.10. Executing OPT_DFF pass (perform DFF optimizations).

14.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.33.12. Rerunning OPT passes. (Removed registers in this run.)

14.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[2].carry: CO=1'0

14.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.33.16. Executing OPT_DFF pass (perform DFF optimizations).

14.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.33.18. Rerunning OPT passes. (Removed registers in this run.)

14.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[3].carry: CO=1'0

14.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.33.22. Executing OPT_DFF pass (perform DFF optimizations).

14.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.33.24. Rerunning OPT passes. (Removed registers in this run.)

14.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[4].carry: CO=1'0

14.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.33.28. Executing OPT_DFF pass (perform DFF optimizations).

14.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.33.30. Rerunning OPT passes. (Removed registers in this run.)

14.33.31. Running ICE40 specific optimizations.

14.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.33.34. Executing OPT_DFF pass (perform DFF optimizations).

14.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.33.36. Finished OPT passes. (There is nothing left to do.)

14.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

14.35. Executing TECHMAP pass (map to technology primitives).

14.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

14.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~396 debug messages>

14.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2588.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2695.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2705.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2780.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2783.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2786.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2789.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2792.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2795.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2798.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2801.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2816.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2819.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2822.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2825.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2828.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2831.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2837.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2837.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2840.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2840.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2846.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2849.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2852.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2858.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2876.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2879.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2882.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2885.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2888.slice[9].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2893.slice[8].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2896.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2899.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2902.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2905.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2914.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$2917.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$3732.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[1].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[2].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[3].carry ($lut).
Mapping ice40hx8k.$auto$maccmap.cc:240:synth$4728.slice[4].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3023.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3023.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3032.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3032.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3033.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3033.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3037.slice[6].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3037.slice[7].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3047.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3047.slice[8].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3052.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$opt_expr.cc:1948:replace_const_cells$3052.slice[6].carry ($lut).

14.38. Executing ICE40_OPT pass (performing simple optimizations).

14.38.1. Running ICE40 specific optimizations.

14.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1185 debug messages>

14.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~1362 debug messages>
Removed a total of 454 cells.

14.38.4. Executing OPT_DFF pass (perform DFF optimizations).

14.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 10 unused cells and 2699 unused wires.
<suppressed ~11 debug messages>

14.38.6. Rerunning OPT passes. (Removed registers in this run.)

14.38.7. Running ICE40 specific optimizations.

14.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.38.10. Executing OPT_DFF pass (perform DFF optimizations).

14.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.38.12. Finished OPT passes. (There is nothing left to do.)

14.39. Executing TECHMAP pass (map to technology primitives).

14.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

14.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

14.40. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

14.41. Executing ABC9 pass.

14.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ice40hx8k.
Found 0 SCCs.

14.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.5. Executing PROC pass (convert processes to netlists).

14.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

14.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

14.41.5.4. Executing PROC_INIT pass (extract init attributes).

14.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

14.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

14.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

14.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

14.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

14.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

14.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

14.41.5.12. Executing OPT_EXPR pass (perform const folding).

14.41.6. Executing TECHMAP pass (map to technology primitives).

14.41.6.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~130 debug messages>

14.41.7. Executing OPT pass (performing simple optimizations).

14.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.
Optimizing module SB_DFFS.

14.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFS'.
Removed a total of 0 cells.

14.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFS..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

14.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFES.
  Optimizing cells in module \SB_DFFR.
  Optimizing cells in module \SB_DFFS.
Performed a total of 0 changes.

14.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFR'.
Finding identical cells in module `\SB_DFFS'.
Removed a total of 0 cells.

14.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

14.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFES..
Finding unused cells or wires in module \SB_DFFR..
Finding unused cells or wires in module \SB_DFFS..

14.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.
Optimizing module SB_DFFS.

14.41.7.9. Finished OPT passes. (There is nothing left to do.)

14.41.8. Executing TECHMAP pass (map to technology primitives).

14.41.8.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

14.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFER for cells of type SB_DFFER.
Using template SB_DFFR for cells of type SB_DFFR.
Using template SB_DFFES for cells of type SB_DFFES.
Using template SB_DFFS for cells of type SB_DFFS.
No more expansions possible.
<suppressed ~343 debug messages>

14.41.9. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

14.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~76 debug messages>

14.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

14.41.13. Executing TECHMAP pass (map to technology primitives).

14.41.13.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~151 debug messages>

14.41.14. Executing OPT pass (performing simple optimizations).

14.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~4 debug messages>

14.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

14.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

14.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

14.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

14.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

14.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

14.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

14.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

14.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

14.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

14.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

14.41.14.16. Finished OPT passes. (There is nothing left to do.)

14.41.15. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

14.41.16. Executing AIGMAP pass (map logic to AIG).
Module ice40hx8k: replaced 2494 cells with 14350 new cells, skipped 4077 cells.
  replaced 3 cell types:
    1036 $_OR_
    1049 $_XOR_
     409 $_MUX_
  not replaced 17 cell types:
      22 $scopeinfo
     311 $_NOT_
    2168 $_AND_
       1 SB_PLL40_CORE
     193 SB_DFFR
       9 SB_DFFS
      31 SB_DFFESR
     114 SB_DFFER
       6 SB_DFFESS
      21 SB_DFFES
      37 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
      37 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     790 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
     193 SB_DFFR_$abc9_byp
       9 SB_DFFS_$abc9_byp
      21 SB_DFFES_$abc9_byp
     114 SB_DFFER_$abc9_byp

14.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

14.41.16.3. Executing XAIGER backend.
<suppressed ~385 debug messages>
Extracted 7578 AND gates and 19652 wires from module `ice40hx8k' to a netlist network with 397 inputs and 516 outputs.

14.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

14.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    397/    516  and =    6092  lev =   33 (0.91)  mem = 0.19 MB  box = 1201  bb = 411
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 44 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    397/    516  and =    4543  lev =   61 (0.81)  mem = 0.15 MB  ch =  351  box = 1062  bb = 411
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 39 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =    4543.  Ch =   306.  Total mem =    1.53 MB. Peak cut mem =    0.06 MB.
ABC: P:  Del = 12430.00.  Ar =    1662.0.  Edge =     5564.  Cut =    33406.  T =     0.00 sec
ABC: P:  Del = 12430.00.  Ar =    1629.0.  Edge =     5607.  Cut =    32183.  T =     0.01 sec
ABC: P:  Del = 12430.00.  Ar =    1513.0.  Edge =     4795.  Cut =    34282.  T =     0.01 sec
ABC: F:  Del = 12430.00.  Ar =    1423.0.  Edge =     4579.  Cut =    27335.  T =     0.00 sec
ABC: A:  Del = 12430.00.  Ar =    1388.0.  Edge =     4218.  Cut =    27285.  T =     0.01 sec
ABC: A:  Del = 12430.00.  Ar =    1382.0.  Edge =     4199.  Cut =    27417.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: yosys-abc: src/aig/gia/giaMfs.c:386: abc::Gia_Man_t* abc::Gia_ManInsertMfs(abc::Gia_Man_t*, abc::Sfm_Ntk_t*, int): Assertion `iLitNew >= 0' failed.
ABC: Aborted (core dumped)
Warning: ABC: execution of command ""/home/shay/a/ece270/bin/yosys-abc" -s -f /tmp/yosys-abc-LKqhLm/abc.script 2>&1" failed: return code 134.

14.41.16.6. Executing AIGER frontend.
<suppressed ~1977 debug messages>
Removed 7785 unused cells and 14605 unused wires.

14.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1475
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      651
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:      193
ABC RESULTS:   \SB_DFFS_$abc9_byp cells:        9
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:       21
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:      114
ABC RESULTS:           input signals:      345
ABC RESULTS:          output signals:      158
Removing temp directory.

14.41.17. Executing TECHMAP pass (map to technology primitives).

14.41.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

14.41.17.2. Continuing TECHMAP pass.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_DFFS_$abc9_byp for cells of type SB_DFFS_$abc9_byp.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
No more expansions possible.
<suppressed ~998 debug messages>

14.42. Executing ICE40_WRAPCARRY pass (wrap carries).

14.43. Executing TECHMAP pass (map to technology primitives).

14.43.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

14.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 380 unused cells and 24800 unused wires.

14.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1907
  1-LUT               93
  2-LUT              510
  3-LUT              772
  4-LUT              532
  with \SB_CARRY    (#0)  395
  with \SB_CARRY    (#1)  400

Eliminating LUTs.
Number of LUTs:     1907
  1-LUT               93
  2-LUT              510
  3-LUT              772
  4-LUT              532
  with \SB_CARRY    (#0)  395
  with \SB_CARRY    (#1)  400

Combining LUTs.
Number of LUTs:     1668
  1-LUT               92
  2-LUT              265
  3-LUT              556
  4-LUT              755
  with \SB_CARRY    (#0)  395
  with \SB_CARRY    (#1)  400

Eliminated 0 LUTs.
Combined 239 LUTs.
<suppressed ~11517 debug messages>

14.45. Executing TECHMAP pass (map to technology primitives).

14.45.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

14.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$8fbefeb634a4a275ce7207ab33dd7f7b52a837d6\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$fa64a60d70b75aae55f88993e8d9332f5962f355\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod$d89b437f6e04585fb6ec63e66c2a620393b6245e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod$b0141a4c59a5a6f707e9bde5277d6b169d632950\$lut for cells of type $lut.
Using template $paramod$50b99034fbf984a51c265442496081454147f31e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001000 for cells of type $lut.
Using template $paramod$ff9cf957b3b216c0e170006ce4c69c4a5c443295\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$c01d1f1a2c22a23f58c65a92a9c94eaeebcde834\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$8c218f07f4fcb7aa89542ff3d7405186c308b9d1\$lut for cells of type $lut.
Using template $paramod$765dca61dbfa835dacf2a260c8a4c5a36939a046\$lut for cells of type $lut.
Using template $paramod$f1029f646005abda698426a043a7c8fe4e2bd078\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$69f20e0703606f2ffd2ee27cd26f815bd5eeb6e9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$6ab1af087b7cdbbe9fe0b2c8de0775ec05f2311f\$lut for cells of type $lut.
Using template $paramod$634be8dac7673ae6f91e2a8a3a2c0e8609542e36\$lut for cells of type $lut.
Using template $paramod$acf49cb7bd2805dee4b4ebb218aa5924b1be7704\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010111 for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$402c896f7b4bfa4bdd8ee80b66a31ef2c91ae593\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001101 for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$ec48a966498c043d93f34c3316787ddea9cedda3\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$18df3812bc12364e5ebcb6c3ed05c0294e4c26fc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$610895a8fdbf27a4d2da55f6513bb969354802ea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$fbdb3996e8bdc7a4a2c7a113aa6e23c2db0a8c44\$lut for cells of type $lut.
Using template $paramod$e6c2f84b29bee64f450d97e51b4fe307777f0652\$lut for cells of type $lut.
Using template $paramod$e1a11d118b739d13604b4866aaa2133957f8da18\$lut for cells of type $lut.
Using template $paramod$aa2d3f78d79ba4b212e3d088f70b2b1fd881f59d\$lut for cells of type $lut.
Using template $paramod$0ca51272bb1f37972a8573ff2d73d123558c5476\$lut for cells of type $lut.
Using template $paramod$708ff7e971fdbc9b041ef4977b41c8d828262923\$lut for cells of type $lut.
Using template $paramod$595b4955041ceff09e28d600fe79275c24ba9878\$lut for cells of type $lut.
Using template $paramod$5829f5d2a4c5757263ee6385c6142d3c7cf9e5be\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$eeb94fcd8e5392649fe04244642520b1ad9644c4\$lut for cells of type $lut.
Using template $paramod$0039ef175354fb8a5f73c5a21d1f6fd3a6436d83\$lut for cells of type $lut.
Using template $paramod$4bfd45f02ed7fecec5d39674ef87475cddf8f14d\$lut for cells of type $lut.
Using template $paramod$9c2aefc9b87c2aa214e490c9f1c6191f63bea58e\$lut for cells of type $lut.
Using template $paramod$bc207060ef0a3f40c10b4648c5c2ce45ac21d8dc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$150b198f7b6a79bb68022b4897e0b9e764b4ab9c\$lut for cells of type $lut.
Using template $paramod$3fbf9e179448527cc5870685155541058c0f9f7a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$4853050665c020c8d21fb1a749196950a09d9df8\$lut for cells of type $lut.
Using template $paramod$b5babc46044ede587ca136e9df4cf31b16813b24\$lut for cells of type $lut.
Using template $paramod$681f5698b726521154bb82fdd031cea775896186\$lut for cells of type $lut.
Using template $paramod$5e5fd4eec4cf05703aae0802b966262ea4d52f3f\$lut for cells of type $lut.
Using template $paramod$e87c652d68339e0a13e8ac3dd39fd0a21e0079b7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010100 for cells of type $lut.
Using template $paramod$ed4b624f477a67dbd878e676981471b9a7808c29\$lut for cells of type $lut.
Using template $paramod$66234a131e9e68cb4c2f2649f914633112541c7c\$lut for cells of type $lut.
Using template $paramod$718208d0d7c444e4924e09c40d40e7ac2bd4dfe6\$lut for cells of type $lut.
Using template $paramod$e85b6eba0dacefc5f73f8748159b8b9599212afc\$lut for cells of type $lut.
Using template $paramod$0b3dae0cf9ba4ff0f31b6a740f162807f52296cf\$lut for cells of type $lut.
Using template $paramod$37275f9005096a8b3beded7be16e5d19f7397fa0\$lut for cells of type $lut.
Using template $paramod$74db7ebdc203ab2b8e34f5d81b5d1b49c6ee3ec6\$lut for cells of type $lut.
Using template $paramod$f5598bdf7d99fbb010b9ad37cfc115d5aefe2f8c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010010 for cells of type $lut.
Using template $paramod$1b006f6294a954502e34ffd3347cb58c2cb14ad8\$lut for cells of type $lut.
Using template $paramod$a06aa83841491819ea0cf939b57a7ccfb595b114\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000100 for cells of type $lut.
Using template $paramod$a4640096cbef09c4ef8613155a589c40164ac034\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$498daa9936ffa1c0b12d774cacc95a35d14b818e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$cad8f5c808e91f937dcf797b89e646787b39867a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$9dd298ae76fb41ac94779a83c068607fbc09ce4f\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod$95647f061a452a57330090c74bbb5ab75f7ee34a\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$fca001e3e0b52158a872e76e56c01ec10dfbb1de\$lut for cells of type $lut.
Using template $paramod$00e22b797b0237a00ad64fac17d87fc61d61b8d5\$lut for cells of type $lut.
Using template $paramod$086937f2e69afb7c662e45e33f5a7616aa818da8\$lut for cells of type $lut.
Using template $paramod$23b135911b7c14b5b19b5329e5903bcf58b44188\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$cad45b6c9da81941161a13849773fe2ed4bc1c6f\$lut for cells of type $lut.
Using template $paramod$c1e4179198d86bbaf8ac5c0cd5967e4052e49ffe\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$3d98cbd933baee327b5d76a0c6e6cddc5563d2bd\$lut for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$c217e185eb8e6463ca272982ba8c5940fa90d81f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$b89c522b7f70adaee1a35d80e932f38159b6a445\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$368ece0cbe0dd8813956f5c0ea41432c34a980c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$72d04cda0ad63fcea17225ad4256bc664683b513\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$7491e7206ae8c682d288373efe06a43b67c277cf\$lut for cells of type $lut.
Using template $paramod$7c10da2741b95c679da643f74e8aa9472416631e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$4be3a821fb2284ae092558dd891a9ab902259ece\$lut for cells of type $lut.
Using template $paramod$91e657805612fbcf1050da26536810738c58d67a\$lut for cells of type $lut.
Using template $paramod$267bf51f643fd50507d05eca65383fd90816fe5b\$lut for cells of type $lut.
Using template $paramod$ea020bbb7d0a566b8be9f35a15f3223827279ace\$lut for cells of type $lut.
Using template $paramod$b287726797d0722f64e731f1134f7c05af8f1578\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$8512f4fb47fa9596f76cdbe5b407a5b54df368e7\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$800ad51c173ef1531dc8c2197ac409be85e8cb0a\$lut for cells of type $lut.
Using template $paramod$c600b4b1adc22857e1c1ba3b6aeb516fabe09da0\$lut for cells of type $lut.
Using template $paramod$7e3de18263fb7d0a2e12a4401120994e66bde6a4\$lut for cells of type $lut.
Using template $paramod$7d35f3eb4056e6484203c99fe42cfcf1dfaba704\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$1b6589a5b00bbad8e5635e71249e07e10bfc1308\$lut for cells of type $lut.
Using template $paramod$4b815e6c998e04ad0d0242e44b0c58a7a9d0b3b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$44056917732d135b578cabfb5aa635122cfb54bc\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$bfaec140133db370a5d093901933a6cf29288d5c\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$4fe95f26cdbe130c5f44b4f784cbc7a2ad0b9854\$lut for cells of type $lut.
Using template $paramod$4d8a844a37fbe6bf13014ac6337aea71afbf5423\$lut for cells of type $lut.
Using template $paramod$729aa850e969bb9bb1c205734876853e142656d4\$lut for cells of type $lut.
Using template $paramod$1f3b67373a23476b64a6ed61bde9dbe9df1086de\$lut for cells of type $lut.
Using template $paramod$66e0e24f2d23f4df3717b3123300d045fbeba512\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$2e242b3870fd1c78b14e7f95ffa17bf0b3a3339c\$lut for cells of type $lut.
Using template $paramod$c70e9b340993375858b284587c45f6f443a7f43b\$lut for cells of type $lut.
Using template $paramod$d6b00b06719051e8e0d21d321c25f50651e7dd46\$lut for cells of type $lut.
Using template $paramod$041aa1dcdd60d3c4ff6eb6326c9e544a0334c607\$lut for cells of type $lut.
Using template $paramod$704cad882e2bedddf5c55ef18de55c67afe1e0ec\$lut for cells of type $lut.
Using template $paramod$00ed0dc3770892bc6977137a5318866312e52db5\$lut for cells of type $lut.
Using template $paramod$d107573456a7bff27c9c4a37149fbe7cd3e40181\$lut for cells of type $lut.
Using template $paramod$59ad7643a6592a7af331878e9c90559a0d5892f1\$lut for cells of type $lut.
Using template $paramod$51adb1afea57a9560b9534400e9af12cb2df0ba0\$lut for cells of type $lut.
Using template $paramod$340dfa7205551f8aa11b1fb8b41f95ed63487197\$lut for cells of type $lut.
Using template $paramod$a565be2755f624db079a6f524d7955dea4c796f6\$lut for cells of type $lut.
Using template $paramod$5b13d2ee598c87cdbe912286a35c6fd102e2087c\$lut for cells of type $lut.
Using template $paramod$12cf840dcfda317ed4aaeef1854f713a535efc4e\$lut for cells of type $lut.
Using template $paramod$bdb40c0ae556f7ad752dbfe2273cf4f2265f7b32\$lut for cells of type $lut.
Using template $paramod$948dd2ffa030d5b4f89d0bac81e2525d9a86122d\$lut for cells of type $lut.
Using template $paramod$db27b0f06bffa7e85778c68a61d9ec0dc94ee034\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$b1afb650e3ea1da14f8d79a19a3c60d790465b39\$lut for cells of type $lut.
Using template $paramod$b2077130d89736f5191d0d24f7f6ffd3bddb0a2d\$lut for cells of type $lut.
Using template $paramod$32f5ea57a02a66d26d4a2e3cd7f26ba05fa8bd58\$lut for cells of type $lut.
Using template $paramod$60c57a531d15ac3dc4cc2d9845c81479cc8e53ec\$lut for cells of type $lut.
Using template $paramod$4a7aa3912ceee3b0f19a96cd6b9dc271a63d3568\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$f6f13587aa6d80df94ccd5c890c878a6bf6f3422\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$514a3911060fb980dd078532320cd172e1e80625\$lut for cells of type $lut.
Using template $paramod$7bb8bcb6df1814f0f27b8e3b9d986798af16e5f5\$lut for cells of type $lut.
Using template $paramod$2589c8bd39c7cf64bd6c07dd7ee4c537f64f0868\$lut for cells of type $lut.
Using template $paramod$6bf74d43098222579e639c5a64a5885252736467\$lut for cells of type $lut.
Using template $paramod$1c5413a61c2c2a60eabca34ea850b64e3eff0f8e\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$2c91cbb250dbe2eadf2552b6e01b2549b9131c49\$lut for cells of type $lut.
Using template $paramod$a345a076676ef5ec32f39ee4015a072b76784186\$lut for cells of type $lut.
Using template $paramod$5f1d3a143c9c87ab46abfde5f2b7762cf4000f70\$lut for cells of type $lut.
Using template $paramod$12618d2e4f24227d6f46ca347b63e1113d3c5831\$lut for cells of type $lut.
Using template $paramod$cde361a621e929168e2e29211efd6e41391c35c1\$lut for cells of type $lut.
Using template $paramod$074c6d62509caedd1032a48aca32591cfcbdc015\$lut for cells of type $lut.
Using template $paramod$ee5adfa1bcc7e4b8948c774483a7d19aaddb4759\$lut for cells of type $lut.
Using template $paramod$24b67fade1852074c0ac6a4c585dd4228e286f08\$lut for cells of type $lut.
Using template $paramod$7d863431ac8601bfa32d6f89cffc1c540d2e2e8d\$lut for cells of type $lut.
Using template $paramod$ef14303192218c8dd28cb97c03357085cb7c4d4d\$lut for cells of type $lut.
Using template $paramod$f4281cc75e71c5647c0767b4f2e4b2b5e0b782ca\$lut for cells of type $lut.
Using template $paramod$f65cf6380214e831938c4f25f730307ae86218f7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$994fa8fed26a9ea943453d38349dc9a54d728016\$lut for cells of type $lut.
Using template $paramod$5a79f69c7e8abf11867c09cf1878281cfd031ef8\$lut for cells of type $lut.
Using template $paramod$f4ae1b1baef5c12e8f4145811caebb30472d171f\$lut for cells of type $lut.
Using template $paramod$3f6fe0730f7978b946a57d55a78e206b053e637b\$lut for cells of type $lut.
Using template $paramod$debd9b669717840687fe3e52f7822c4b59921848\$lut for cells of type $lut.
Using template $paramod$c6458c4a02ccc8141565827868954e03fd3748cc\$lut for cells of type $lut.
Using template $paramod$6c15da6150ce36eeff7fb8c09f7ef22f5448d679\$lut for cells of type $lut.
Using template $paramod$7b42ee40460c24015b6f7a9841dbd2579367da0f\$lut for cells of type $lut.
Using template $paramod$a8c32efd72d2e5a4f2d5ec49f139b77544f5b0df\$lut for cells of type $lut.
Using template $paramod$dcba541ad53a9873d71bfba6c13dc2a8e2a60a79\$lut for cells of type $lut.
Using template $paramod$099540ad9a68db11e56d3c49bc1da426505b7d0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$3ae9f1cda205b669870c653a21d45eee50078e98\$lut for cells of type $lut.
Using template $paramod$08ca402a0afea331e5a3652c1822e4e914139408\$lut for cells of type $lut.
Using template $paramod$64508f901d0b54488d8af805ae9fe1978a75e759\$lut for cells of type $lut.
Using template $paramod$1b985a9ae52778d1dcee696920da7c3fc3b9af24\$lut for cells of type $lut.
Using template $paramod$323dbb47a6d14615772fecb6fe7c4bec277e6c6b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100001 for cells of type $lut.
Using template $paramod$1096eac6a57c2dd20398f015b3a30c78ad732f4f\$lut for cells of type $lut.
Using template $paramod$8466aae7f3132f822e70bbd8738850d820750479\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100001 for cells of type $lut.
Using template $paramod$f11a418540bd936e7c3b2f641d189702e2a79cd9\$lut for cells of type $lut.
Using template $paramod$5c4744dd30e9681f3d457d227fd69bb73f224e2c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod$e96de5e9fcce737e52eacf39c70c8f533dc27d63\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$464d286cc302627c2e44b6c4a8450c9bebc28389\$lut for cells of type $lut.
Using template $paramod$e2f682077d75dd018226341dd2d7343aa220f0c8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$6cd12bdee1c8fc46f908f85661901877e27cf7a0\$lut for cells of type $lut.
Using template $paramod$a988852add2bdce7c1dfac786401ba7c7bc832c1\$lut for cells of type $lut.
Using template $paramod$12f50c31dd606e39f93297c7b7af96cf69679f03\$lut for cells of type $lut.
Using template $paramod$bdef8a4236b2618ef82ff6d08787d9d3dfc92d2b\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod$6eaa285474ca0c16a33be004e48a6a32f35674a1\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$a991f87f22acc6d00629b2bbeb1389743fc3f364\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$f875e9238b229f27f73a26dba6b74264ffc76ead\$lut for cells of type $lut.
Using template $paramod$651e836885d95717c36e69441422c3fe04ee5f4d\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$a82a699dba54b8465366aeb90aba90d3d29adde0\$lut for cells of type $lut.
Using template $paramod$bacdb2105cbfbe75cfbcc2fb021fd3aba864526b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110110 for cells of type $lut.
Using template $paramod$d3f4c7e3f0239dbfbe248a0012ae40b9c40236fc\$lut for cells of type $lut.
Using template $paramod$a38566d2108ef0431d8737a049e71ff2ddbc1540\$lut for cells of type $lut.
Using template $paramod$1d612f5682a6e2aba7d12e7b020e63a9ae6303ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$6ce6c9ed24092f88d858965e9e9a15c5bec9d6d7\$lut for cells of type $lut.
Using template $paramod$8d34633a393a9c1b764705ff3781c5dc576977fe\$lut for cells of type $lut.
Using template $paramod$3ea5e1aff67d5158d4abe40f7c4e0ca909124912\$lut for cells of type $lut.
Using template $paramod$1961dd7d96994fd5c9b68bbea79858ef686523ca\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$ead66ba22839f96e739c8f1b5a09bc1717b3be02\$lut for cells of type $lut.
Using template $paramod$c1747c0c7cb4f86c4813433b4d41103fb3fe105a\$lut for cells of type $lut.
Using template $paramod$7d718ff59adc012add9b409fcd954bc5df2caca2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$e02df88e1d59c81262f5bd67c0a9018a7bc0de37\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$a4399ab9ab2086a4dd8377a70187771efe5d8c8a\$lut for cells of type $lut.
Using template $paramod$f9e6b8c8bbaa4b164a91075c553341d15958d0ba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$bda627942f0fd9f259652765f249288b57bdbcff\$lut for cells of type $lut.
Using template $paramod$8fd8efe0a495790cc9ddc97266933ea8a8cd7b45\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$1b48bc962a0c1e178183f21032378372adc5e26c\$lut for cells of type $lut.
Using template $paramod$b86b68a00733dbecb31d58a14a13683475a2002a\$lut for cells of type $lut.
Using template $paramod$e952b38c63bec92693edd7c3a14aba6cd353e38b\$lut for cells of type $lut.
Using template $paramod$fda6887b37f599177ed9cb69271d882b63df7e66\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$bde5e24f87fb3cd331e2c44c409e3e09c230cbf4\$lut for cells of type $lut.
Using template $paramod$474bedaec9543fe0c362d2e4221204654298befe\$lut for cells of type $lut.
Using template $paramod$62e34d236b5cf9e50e7481784c0097067a15fba4\$lut for cells of type $lut.
Using template $paramod$b04f0510561c4bbb703d2e39c6eca682b920366b\$lut for cells of type $lut.
Using template $paramod$8384e66d408d22ab39dfb451efb7879731befeb8\$lut for cells of type $lut.
Using template $paramod$5b78fd69ad27c136d080497c51b2f17f3196ed9e\$lut for cells of type $lut.
Using template $paramod$90485030abaac57c01da30e6bdcc9273f3019eb8\$lut for cells of type $lut.
Using template $paramod$b419810ab1d51da1962917a1949cecc5f27935eb\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
No more expansions possible.
<suppressed ~5779 debug messages>
Removed 0 unused cells and 4280 unused wires.

14.46. Executing AUTONAME pass.
Renamed 112108 objects in module ice40hx8k (246 iterations).
<suppressed ~4226 debug messages>

14.47. Executing HIERARCHY pass (managing design hierarchy).

14.47.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

14.47.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

14.48. Printing statistics.

=== ice40hx8k ===

   Number of wires:               1771
   Number of wire bits:           4772
   Number of public wires:        1771
   Number of public wire bits:    4772
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2681
     $scopeinfo                     22
     SB_CARRY                      616
     SB_DFFER                      114
     SB_DFFES                       21
     SB_DFFESR                      31
     SB_DFFESS                       6
     SB_DFFR                       193
     SB_DFFS                         9
     SB_LUT4                      1668
     SB_PLL40_CORE                   1

14.49. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

14.50. Executing JSON backend.

Warnings: 37 unique messages, 37 total
End of script. Logfile hash: f1323590d2, CPU: user 3.83s system 0.04s, MEM: 86.25 MB peak
Yosys 0.39 (git sha1 00338082b, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 69% 1x abc9_exe (8 sec), 7% 38x opt_expr (0 sec), ...
